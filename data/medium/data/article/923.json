{"name": "923", "parent": "", "content": "d\u2019Oh My\u00a0Zsh How I unexpectedly built a monster of an open source\u00a0project This wouldn\u2019t be my first foray into open source software; nor my last. A few songs from 2009 to listen to while reading. It was the summer of 2009. I found myself helping a coworker debug something in their terminal. As I attempted to type in a few command lines, I noticed that the prompt wasn\u2019t responding to the shortcuts that my brain had grown accustomed to. Frustrated, I exclaimed, \u201cwhen are you finally going to switch over to Zsh?!\u201d (yeah, I was one of the type of annoying coworker that would constantly point out that X was better than Y when given the chance. In hindsight, I don\u2019t know how they put up with me\u2026but between you and me, I had a point.) \u201cwhen are you finally going to switch over to\u00a0Zsh?!\u201d At that point in time, I had been a daily Zsh user for a little over three years. Some of my #caboose friends shared a few of their\u00a0.zshrc configurations within our IRC channel. After a few years, my\u00a0.zshrc file grew into a tangled rat's nest. Honestly, I didn\u2019t know what ~30% of the configuration did. I trusted my friends enough to run with it, though. What I did know was that I had some git branch and status details, color highlighting for a few tools (i.e., grep), autocompleting file paths over SSH connections, and a handful of shortcuts for Rake and Capistrano. Working on a machine with a default Bash profile felt remarkably archaic; I\u2019d become dependent on these shortcuts. A few coworkers were happy to copy/paste the\u00a0.zshrc file that I shared and begin using it. A few others wouldn\u2019t because they knew that I didn\u2019t know what some of it did. Fair enough. After a few attempts to convert them and getting nowhere, I opted for a different approach. First, I reorganized my\u00a0.zshrc configuration, which involved breaking it up into a collection of smaller files. My thinking here was that this would a) help me better understand how all of these bits worked while b) helping educate my peers when they went to read the code. Pre-empting their next question, \u201chow do I get this to work on my machine?\u201d, I drafted the first setup instructions. Most importantly, I packaged all these files into a shiny new git repository. I figured that if I tossed it up on Github, my peers would be able to collaborate with me on improving it. While not a huge leap, it was a step above inviting people to copy/paste a text file from Pastie. On Aug. 28th, 2009, Oh My Zsh was born. One of the first public versions of Oh My Zsh. (view on\u00a0github) \u2026but, wait a minute!! Where are the themes? Where are the plugins? Installation scripts?\u00a0Logo? This might come to a surprise to most of the Oh My Zsh user base, but none of those were features that I had considered. My goal with the project was not to build a framework for maintaining Zsh configurations but to share my own config with my coworkers so that they\u2019d use Zsh. Patrick (left) and Travis\u00a0(right) Within a day of sharing it with all of my coworkers, everyone at Planet Argon had migrated from Bash to Zsh. Victory!\u00a0\u2026or so I thought. The first feature request came in the next day. \u201cHow do I customize MY\u00a0prompt?\u201d Two coworkers asked me how they could customize their prompt. They wanted to change the colors and the information that was displayed. What the hell!? Wasn\u2019t my prompt compelling enough for them? So nitpicky.\u00a0;-) I pointed to the prompt.zsh file and said they could modify that. Quickly, this became an issue as they now had their own version of that file. As a result, this would add some complexity if we all wanted to share some of our shortcuts and features as we\u2019d have conflicts to deal with. Hmm\u2026 So, a day after first announcing Oh My Zsh on my blog, I began introducing the initial concept of themes. Introducing the \u2018famous\u2019 robbyrussell theme to the\u00a0world. Meanwhile, I got my first external pull-request from Geoff Garside to add a few aliases for TextMate. (Notice how that went straight into a catch-all aliases.zsh file) A day later, another theme was sent over. Groovy, I better add a link on the README to see some screenshots on the wiki. Within a month, we had a dozen themes contributed to the project. This began to be a really popular aspect to Oh My Zsh and we had to start hitting the brakes on accepting themes once we passed 100. (we\u2019re currently at ~140 and rarely accept new ones) Simplifying setup with an installer It occurred to me that the initial setup was requiring people to run a handful of commands. Rather than asking people to re-type and/or copy/paste a handful of commands, I felt that it would be more efficient for both parties (as it\u2019d reduce the questions my coworkers would have when they hit a problem and/or skipped a step). The first tweet to mention Oh My Zsh? An installer was born. The initial installer script (view on\u00a0github) My initial thoughts were to handle save folks a few steps by automating the installer. If everyone ran the same commands, then we could cut down on human error (skipping a command, typos, etc.). I also wanted to be mindful that people might be switching from either Bash or an existing cobbled-together Zsh configuration. To help them with a possible switch back to the previous shell, we made a backup of their original configuration file. Finally, we\u2019d switch their default shell to Zsh. \u201cHooray! Oh My Zsh has been installed.\u201d Oh, right. How will people be able to stay updated with the new changes to the project? The next day, I added an upgrade script that strolls over to the Oh My Zsh directory, fetch updates from the git repository, and returns you to your previous working directory. The initial upgrade script (view on\u00a0github) Far from rocket science. About three weeks later, it became obvious that my coworkers weren\u2019t manually keeping up with all of the new updates to the project. Rather than reminding them to do that from time-to-time, I added functionality that would periodically prompt the user to check for updates. Up until this point, this felt like the most complicated piece of code in the project. I wish that I could remember who gave me the great idea to use an epoch value here. The initial auto-updater (view on\u00a0github) In my opinion, it was also the turning point for the project. While a handful of people were using it, this functionality would allow nearly every user to stay up-to-date on project changes and more importantly, stay engaged. When they would run the updater, they\u2019d see a list of files changed and that would, subtly, introduce them to new features\u2026 a la, \u201cI wonder what that theme looks like..\u201d Sadly, not everyone has been a fan. Despite a few vocal opponents over the years, I\u2019ve stood by my decision to keep this as a default setting. Back in 2012, we made a change to reduce the frequency of auto-update prompts by 50%. The auto-update has allowed us to ship new features, performance improvements, and bug fixes without relying on everyone manually doing it. I\u2019m convinced that this feature has helped keep the community engaged. This Muffin Needs\u00a0Candy While the project was attracting a lot of themes, I really felt like the project could benefit from branding. My solution? Ascii art. I have no idea what prompted the git commit\u00a0message. My thought process here was\u2026 sure, you get a bunch of useful shortcuts and themes when you begin using Oh My Zsh, but I really felt like the first impression after the installer would run was an opportunity to delight new users. Candy sprinkles on the muffin\u2026as it were. (I have no recollection of why I wrote that commit message back then. The reference is lost on me.) What the update script currently displays. People have been asking me to print shirts with the ascii art for quite some time. (we\u2019ll likely do that this summer\u200a\u2014\u200afollow us on twitter) Plugins Ten months after open sourcing the project, users had begun to request the ability to not have everything get loaded up. For example, a Python developer might not need the Rake and Capistrano related aliases to get loaded like a Ruby developer would. So, we implemented a basic plugin system that would allow folks to decide which to load on initialization by changing a value in\u00a0.zshrc. When this feature was released, there were five plugins bundled. Within a few months, I started to get pull requests for new plugin ideas. Within a year, I had accepted over 40 plugins. Within two years? Over 70 plugins. Currently, we have plugins for adb, ant, apache2-macports, archlinux, autoenv, autojump, autopep8, aws, battery, bbedit, bgnotify, boot2docker, bower, branch, brew, brew-cask, bundler, bwana, cabal, cake, cakephp3, capistrano, cask, catimg, celery, chruby, chucknorris, cloudapp, codeclimate, coffee, colemak, colored-man-pages, colorize, command-not-found, common-aliases, compleat, composer, copydir, copyfile, cp, cpanm, debian, dircycle, dirhistory, dirpersist, django, dnf, docker, docker-compose, emacs, ember-cli, emoji, emoji-clock, emotty, encode64, extract, fabric, fancy-ctrl-z, fasd, fastfile, fbterm, fedora, forklift, frontend-search, gas, gem, git, git-extras, git-flow, git-flow-avh, git-hubflow, git-prompt, git-remote-branch, gitfast, github, gitignore, glassfish, gnu-utils, go, golang, gpg-agent, gradle, grails, grunt, gulp, heroku, history, history-substring-search, httpie, iwhois, jake-node, jhbuild, jira, jruby, jsontools, jump, kate, kitchen, knife, knife_ssh, laravel, laravel4, laravel5, last-working-dir, lein, lighthouse, lol, macports, man, marked2, mercurial, meteor, mix, mix-fast, mosh, mvn, mysql-macports, n98-magerun, nanoc, nmap, node, npm, nvm, nyan, osx, pass, paver, pep8, per-directory-history, perl, phing, pip, pj, pod, postgres, pow, powder, powify, profiles, pyenv, pylint, python, rails, rake, rake-fast, rand-quote, rbenv, rbfu, rebar, redis-cli, repo, rsync, ruby, rvm, safe-paste, sbt, scala, scd, screen, scw, sfffe, singlechar, spring, sprunge, ssh-agent, stack, sublime, sudo, supervisor, suse, svn, svn-fast-info, symfony, symfony2, systemadmin, systemd, taskwarrior, terminalapp, terminitor, terraform, textastic, textmate, thefuck, themes, thor, tmux, tmux-cssh, tmuxinator, torrent, tugboat, ubuntu, urltools, vagrant, vault, vi-mode, vim-interaction, virtualenv, virtualenvwrapper, vundle, wakeonlan, wd, web-search, wp-cli, xcode, yii, yii2, yum, z, zeus, zsh-navigation-tools, zsh_reload. In total\u2026 214 plugins. Admittedly, not everyone has been impressed by this. I do agree that could be drastically improved. The few times that I considered it, I found the proposed approaches to be too complicated for folks who aren\u2019t yet familiar and/or comfortable with the terminal. Perhaps a more sophisticated approach for version 2 of the framework. (more on this later) There has, also, been a part of me that has felt like this project would only be of interest to people for a few years. As users gained more experience and/or as technology evolved, the framework would be left behind by shiny new projects that solved problems far better than we had. I never thought Oh My Zsh would still be building momentum nearly seven years later. It\u2019s March 22, 2016 and the top trending shell repository on Github is? (find it amusing that the URL reads, \u201cbash\u201d\u2026ahem) \u201cthe (40 new) stars look very different today\u2026\u201d Where do all these new users keep coming from? I \u2764 you people! While I have many stories to share (and intend to write more on this topic), I wanted to speak to those who have been debating the idea of open sourcing a project. Eight Considerations For Your Open Source\u00a0Project Don\u2019t start with a wildly ambitious goal. Start your project with a simple, attainable goal. What does success look like? In my scenario, I wanted 1\u20132 people on my team to use my scripts. The project was a success in under 24 hours. Everything since has been extra-credit. Don\u2019t try to account for every scenario. If I had gotten hung up on some long-term details for the project, Oh My Zsh would never have happened. Nearly everything that has been added to the project has come organically post-initial release. One of the beautiful aspects of an open source project is that your user base can help shape it. Don\u2019t try to make it perfect. Worrying how other people are going to react about your code shouldn\u2019t be your biggest concern. Does it work? How do they feel when they\u2019re interacting with it should be a higher concern. In my case, I\u2019ve had some great contributors over the years who have helped tidy up and improve the quality of the code that I originally released. Rarely has anyone said anything critical about my old code\u200a\u2014\u200amaybe they should have, though.\u00a0;-) Don\u2019t try to be everything to everyone. There have been a few points in the history of the project where we hit a crossroads. In particular, there was a time when a huge rebuild was proposed, which I was quite excited about until I was able to wrap my head around some of the changes. Proposal to Simplify OH-MY-ZSH \u00b7 Issue #377 \u00b7 robbyrussell/oh-my-zshoh-my-zsh - A delightful community-driven framework for managing your zsh configuration. Includes 200+ optional plugins\u2026github.com As a result, a fork was rebranded and we agreed to follow different paths. Not everyone was happy with my decision here, but it was during this period that it became clear (to me) that I wanted to focus my attention on folks who weren\u2019t too comfortable with the terminal and/or git. Don\u2019t stop thanking contributors. If anybody helps your project out, please let them know how much you appreciate their effort. I can\u2019t thank my contributors enough. One of my biggest self-critiques related to this project is that I\u2019ve not been consistent enough in being vocal about my appreciation. There are 910 people from all over the world who have their code accepted into the master branch of Oh My Zsh at the time of writing this. It\u2019s such a long list that Github can\u2019t even list them\u00a0all. In particular, thank you. (you know who you are) Don\u2019t forget the documentation. Over the years, documentation of plugins and functionality has been vital to helping inform users on how to take advantage of the framework. I wish we had adopted this convention several years before. The README file is going to be seen the most\u2026so make it count. In my case, I opted to introduce people to my personality and dry sense of humor. Honestly, seeing tweets like this means the world to me. Don\u2019t forget about the rest of your life. Again, I never anticipated the project turning into what it is today. Are you familiar with the anecdote about the frog in a pot of boiling water? It took me 3\u20134 years, too many, to finally bring in another person to help maintain the project. I kept thinking that I could catch up with all the open pull requests and issues. What I kept telling myself was that folks who know how to fork the project can make their desired changes and work off of that, so reviewing and approving pull requests is a nice-to-happen versus a need-to-happen. In practice, it\u2019s somewhere in between. I do feel a bit bad for old pull requests lingering, but I also don\u2019t keep Oh My Zsh as one of the top few projects on my plate. Outside of Oh My Zsh, I run a 19-person agency, play guitar in an instrumental post-rock band, sit on the board of directors of a local homeless shelter non-profit, travel with my camera a lot, ride my motorcycle, ride my bicycle, and try to keep a social life with my friends. Oh My Zsh fits somewhere in amongst all of these. It\u2019s not at the top of my priority list. It\u2019s not at the bottom. It\u2019s somewhere between. This isn\u2019t an excuse to not being able to keep up with the community, but more of a reminder that those other things should matter to you, too, if you\u2019re about to start your own project. (I will write more on the topic of leading an open source project w/maintainers in another story\u2026 \u2764 are you following me?\u00a0\u2764) Don\u2019t forget to have some fun. When you start your project, decide if this is going to be serious work time or play time. Perhaps it can be somewhere in the middle. Oh My Zsh has, always, been a play time activity project for me. Knowing that one of my playful projects has been and continues to be enjoyed by people is such a wonderful feeling. Some might call it a passion project. I call it playtime. Interested in my fun open source\u00a0project? You can learn more at http://ohmyz.sh. If you enjoyed this article, please recommend and/or share it.\u00a0\u2764 Already using Oh My Zsh? I\u2019d love to learn how you heard about it. ", "title": "d\u2019Oh My\u00a0Zsh", "sentences": [{"7513": "d\u2019Oh My\u00a0Zsh"}, {"d506": "How I unexpectedly built a monster of an open source\u00a0project"}, {"3166": "This wouldn\u2019t be my first foray into open source software; nor my last."}, {"d696": "A few songs from 2009 to listen to while reading."}, {"b4d8": "It was the summer of 2009. I found myself helping a coworker debug something in their terminal. As I attempted to type in a few command lines, I noticed that the prompt wasn\u2019t responding to the shortcuts that my brain had grown accustomed to. Frustrated, I exclaimed, \u201cwhen are you finally going to switch over to Zsh?!\u201d"}, {"ee34": "(yeah, I was one of the type of annoying coworker that would constantly point out that X was better than Y when given the chance. In hindsight, I don\u2019t know how they put up with me\u2026but between you and me, I had a point.)"}, {"bd5a": "\u201cwhen are you finally going to switch over to\u00a0Zsh?!\u201d"}, {"e395": "At that point in time, I had been a daily Zsh user for a little over three years."}, {"d5da": "Some of my #caboose friends shared a few of their\u00a0.zshrc configurations within our IRC channel. After a few years, my\u00a0.zshrc file grew into a tangled rat's nest. Honestly, I didn\u2019t know what ~30% of the configuration did. I trusted my friends enough to run with it, though. What I did know was that I had some git branch and status details, color highlighting for a few tools (i.e., grep), autocompleting file paths over SSH connections, and a handful of shortcuts for Rake and Capistrano. Working on a machine with a default Bash profile felt remarkably archaic; I\u2019d become dependent on these shortcuts."}, {"0cb7": "A few coworkers were happy to copy/paste the\u00a0.zshrc file that I shared and begin using it. A few others wouldn\u2019t because they knew that I didn\u2019t know what some of it did. Fair enough."}, {"07de": "After a few attempts to convert them and getting nowhere, I opted for a different approach."}, {"29d6": "First, I reorganized my\u00a0.zshrc configuration, which involved breaking it up into a collection of smaller files. My thinking here was that this would a) help me better understand how all of these bits worked while b) helping educate my peers when they went to read the code."}, {"5046": "Pre-empting their next question, \u201chow do I get this to work on my machine?\u201d, I drafted the first setup instructions."}, {"036f": "Most importantly, I packaged all these files into a shiny new git repository. I figured that if I tossed it up on Github, my peers would be able to collaborate with me on improving it."}, {"da2c": "While not a huge leap, it was a step above inviting people to copy/paste a text file from Pastie."}, {"1099": "On Aug. 28th, 2009, Oh My Zsh was born."}, {"a692": "One of the first public versions of Oh My Zsh. (view on\u00a0github)"}, {"b4e6": "\u2026but, wait a minute!! Where are the themes? Where are the plugins? Installation scripts?\u00a0Logo?"}, {"a538": "This might come to a surprise to most of the Oh My Zsh user base, but none of those were features that I had considered. My goal with the project was not to build a framework for maintaining Zsh configurations but to share my own config with my coworkers so that they\u2019d use Zsh."}, {"fcfe": "Patrick (left) and Travis\u00a0(right)"}, {"3f5f": "Within a day of sharing it with all of my coworkers, everyone at Planet Argon had migrated from Bash to Zsh."}, {"5faa": "Victory!\u00a0\u2026or so I thought."}, {"7a50": "The first feature request came in the next day."}, {"e9b3": "\u201cHow do I customize MY\u00a0prompt?\u201d"}, {"8d62": "Two coworkers asked me how they could customize their prompt. They wanted to change the colors and the information that was displayed."}, {"2770": "What the hell!? Wasn\u2019t my prompt compelling enough for them? So nitpicky.\u00a0;-)"}, {"3f87": "I pointed to the prompt.zsh file and said they could modify that."}, {"5fcb": "Quickly, this became an issue as they now had their own version of that file. As a result, this would add some complexity if we all wanted to share some of our shortcuts and features as we\u2019d have conflicts to deal with."}, {"acfa": "Hmm\u2026"}, {"0de4": "So, a day after first announcing Oh My Zsh on my blog, I began introducing the initial concept of themes."}, {"fb34": "Introducing the \u2018famous\u2019 robbyrussell theme to the\u00a0world."}, {"96a0": "Meanwhile, I got my first external pull-request from Geoff Garside to add a few aliases for TextMate. (Notice how that went straight into a catch-all aliases.zsh file)"}, {"0db0": "A day later, another theme was sent over. Groovy, I better add a link on the README to see some screenshots on the wiki."}, {"5a58": "Within a month, we had a dozen themes contributed to the project."}, {"bc9d": "This began to be a really popular aspect to Oh My Zsh and we had to start hitting the brakes on accepting themes once we passed 100. (we\u2019re currently at ~140 and rarely accept new ones)"}, {"5c22": "Simplifying setup with an installer"}, {"fd6a": "It occurred to me that the initial setup was requiring people to run a handful of commands. Rather than asking people to re-type and/or copy/paste a handful of commands, I felt that it would be more efficient for both parties (as it\u2019d reduce the questions my coworkers would have when they hit a problem and/or skipped a step)."}, {"9b48": "The first tweet to mention Oh My Zsh?"}, {"5678": "An installer was born."}, {"fc0a": "The initial installer script (view on\u00a0github)"}, {"ea03": "My initial thoughts were to handle save folks a few steps by automating the installer. If everyone ran the same commands, then we could cut down on human error (skipping a command, typos, etc.). I also wanted to be mindful that people might be switching from either Bash or an existing cobbled-together Zsh configuration. To help them with a possible switch back to the previous shell, we made a backup of their original configuration file. Finally, we\u2019d switch their default shell to Zsh."}, {"653d": "\u201cHooray! Oh My Zsh has been installed.\u201d"}, {"eae7": "Oh, right. How will people be able to stay updated with the new changes to the project?"}, {"1627": "The next day, I added an upgrade script that strolls over to the Oh My Zsh directory, fetch updates from the git repository, and returns you to your previous working directory."}, {"4476": "The initial upgrade script (view on\u00a0github)"}, {"3663": "Far from rocket science."}, {"75b5": "About three weeks later, it became obvious that my coworkers weren\u2019t manually keeping up with all of the new updates to the project. Rather than reminding them to do that from time-to-time, I added functionality that would periodically prompt the user to check for updates."}, {"e966": "Up until this point, this felt like the most complicated piece of code in the project. I wish that I could remember who gave me the great idea to use an epoch value here."}, {"0356": "The initial auto-updater (view on\u00a0github)"}, {"6d03": "In my opinion, it was also the turning point for the project."}, {"cd4b": "While a handful of people were using it, this functionality would allow nearly every user to stay up-to-date on project changes and more importantly, stay engaged. When they would run the updater, they\u2019d see a list of files changed and that would, subtly, introduce them to new features\u2026 a la, \u201cI wonder what that theme looks like..\u201d"}, {"aa90": "Sadly, not everyone has been a fan."}, {"9237": "Despite a few vocal opponents over the years, I\u2019ve stood by my decision to keep this as a default setting."}, {"bd4a": "Back in 2012, we made a change to reduce the frequency of auto-update prompts by 50%."}, {"dcc0": "The auto-update has allowed us to ship new features, performance improvements, and bug fixes without relying on everyone manually doing it. I\u2019m convinced that this feature has helped keep the community engaged."}, {"24d0": "This Muffin Needs\u00a0Candy"}, {"509c": "While the project was attracting a lot of themes, I really felt like the project could benefit from branding."}, {"1f19": "My solution? Ascii art."}, {"311d": "I have no idea what prompted the git commit\u00a0message."}, {"8cf6": "My thought process here was\u2026 sure, you get a bunch of useful shortcuts and themes when you begin using Oh My Zsh, but I really felt like the first impression after the installer would run was an opportunity to delight new users."}, {"54bb": "Candy sprinkles on the muffin\u2026as it were. (I have no recollection of why I wrote that commit message back then. The reference is lost on me.)"}, {"1677": "What the update script currently displays."}, {"478c": "People have been asking me to print shirts with the ascii art for quite some time. (we\u2019ll likely do that this summer\u200a\u2014\u200afollow us on twitter)"}, {"9863": "Plugins"}, {"9902": "Ten months after open sourcing the project, users had begun to request the ability to not have everything get loaded up. For example, a Python developer might not need the Rake and Capistrano related aliases to get loaded like a Ruby developer would."}, {"fc08": "So, we implemented a basic plugin system that would allow folks to decide which to load on initialization by changing a value in\u00a0.zshrc."}, {"1402": "When this feature was released, there were five plugins bundled."}, {"44e3": "Within a few months, I started to get pull requests for new plugin ideas."}, {"d29f": "Within a year, I had accepted over 40 plugins."}, {"636a": "Within two years? Over 70 plugins."}, {"9491": "Currently, we have plugins for adb, ant, apache2-macports, archlinux, autoenv, autojump, autopep8, aws, battery, bbedit, bgnotify, boot2docker, bower, branch, brew, brew-cask, bundler, bwana, cabal, cake, cakephp3, capistrano, cask, catimg, celery, chruby, chucknorris, cloudapp, codeclimate, coffee, colemak, colored-man-pages, colorize, command-not-found, common-aliases, compleat, composer, copydir, copyfile, cp, cpanm, debian, dircycle, dirhistory, dirpersist, django, dnf, docker, docker-compose, emacs, ember-cli, emoji, emoji-clock, emotty, encode64, extract, fabric, fancy-ctrl-z, fasd, fastfile, fbterm, fedora, forklift, frontend-search, gas, gem, git, git-extras, git-flow, git-flow-avh, git-hubflow, git-prompt, git-remote-branch, gitfast, github, gitignore, glassfish, gnu-utils, go, golang, gpg-agent, gradle, grails, grunt, gulp, heroku, history, history-substring-search, httpie, iwhois, jake-node, jhbuild, jira, jruby, jsontools, jump, kate, kitchen, knife, knife_ssh, laravel, laravel4, laravel5, last-working-dir, lein, lighthouse, lol, macports, man, marked2, mercurial, meteor, mix, mix-fast, mosh, mvn, mysql-macports, n98-magerun, nanoc, nmap, node, npm, nvm, nyan, osx, pass, paver, pep8, per-directory-history, perl, phing, pip, pj, pod, postgres, pow, powder, powify, profiles, pyenv, pylint, python, rails, rake, rake-fast, rand-quote, rbenv, rbfu, rebar, redis-cli, repo, rsync, ruby, rvm, safe-paste, sbt, scala, scd, screen, scw, sfffe, singlechar, spring, sprunge, ssh-agent, stack, sublime, sudo, supervisor, suse, svn, svn-fast-info, symfony, symfony2, systemadmin, systemd, taskwarrior, terminalapp, terminitor, terraform, textastic, textmate, thefuck, themes, thor, tmux, tmux-cssh, tmuxinator, torrent, tugboat, ubuntu, urltools, vagrant, vault, vi-mode, vim-interaction, virtualenv, virtualenvwrapper, vundle, wakeonlan, wd, web-search, wp-cli, xcode, yii, yii2, yum, z, zeus, zsh-navigation-tools, zsh_reload."}, {"f85d": "In total\u2026 214 plugins. Admittedly, not everyone has been impressed by this."}, {"6da8": "I do agree that could be drastically improved."}, {"3be4": "The few times that I considered it, I found the proposed approaches to be too complicated for folks who aren\u2019t yet familiar and/or comfortable with the terminal. Perhaps a more sophisticated approach for version 2 of the framework. (more on this later)"}, {"a5be": "There has, also, been a part of me that has felt like this project would only be of interest to people for a few years. As users gained more experience and/or as technology evolved, the framework would be left behind by shiny new projects that solved problems far better than we had."}, {"897c": "I never thought Oh My Zsh would still be building momentum nearly seven years later."}, {"c678": "It\u2019s March 22, 2016 and the top trending shell repository on Github is? (find it amusing that the URL reads, \u201cbash\u201d\u2026ahem)"}, {"156e": "\u201cthe (40 new) stars look very different today\u2026\u201d"}, {"de54": "Where do all these new users keep coming from? I \u2764 you people!"}, {"5e9c": "While I have many stories to share (and intend to write more on this topic), I wanted to speak to those who have been debating the idea of open sourcing a project."}, {"78c9": "Eight Considerations For Your Open Source\u00a0Project"}, {"e39c": "Don\u2019t start with a wildly ambitious goal. Start your project with a simple, attainable goal. What does success look like? In my scenario, I wanted 1\u20132 people on my team to use my scripts. The project was a success in under 24 hours."}, {"7800": "Everything since has been extra-credit."}, {"968d": "Don\u2019t try to account for every scenario. If I had gotten hung up on some long-term details for the project, Oh My Zsh would never have happened. Nearly everything that has been added to the project has come organically post-initial release."}, {"6329": "One of the beautiful aspects of an open source project is that your user base can help shape it."}, {"3804": "Don\u2019t try to make it perfect. Worrying how other people are going to react about your code shouldn\u2019t be your biggest concern. Does it work? How do they feel when they\u2019re interacting with it should be a higher concern. In my case, I\u2019ve had some great contributors over the years who have helped tidy up and improve the quality of the code that I originally released."}, {"d592": "Rarely has anyone said anything critical about my old code\u200a\u2014\u200amaybe they should have, though.\u00a0;-)"}, {"8697": "Don\u2019t try to be everything to everyone. There have been a few points in the history of the project where we hit a crossroads. In particular, there was a time when a huge rebuild was proposed, which I was quite excited about until I was able to wrap my head around some of the changes."}, {"8b69": "Proposal to Simplify OH-MY-ZSH \u00b7 Issue #377 \u00b7 robbyrussell/oh-my-zshoh-my-zsh - A delightful community-driven framework for managing your zsh configuration. Includes 200+ optional plugins\u2026github.com"}, {"1f22": "As a result, a fork was rebranded and we agreed to follow different paths. Not everyone was happy with my decision here, but it was during this period that it became clear (to me) that I wanted to focus my attention on folks who weren\u2019t too comfortable with the terminal and/or git."}, {"72d8": "Don\u2019t stop thanking contributors. If anybody helps your project out, please let them know how much you appreciate their effort. I can\u2019t thank my contributors enough. One of my biggest self-critiques related to this project is that I\u2019ve not been consistent enough in being vocal about my appreciation."}, {"0686": "There are 910 people from all over the world who have their code accepted into the master branch of Oh My Zsh at the time of writing this."}, {"c2bc": "It\u2019s such a long list that Github can\u2019t even list them\u00a0all."}, {"d1c0": "In particular, thank you. (you know who you are)"}, {"bd19": "Don\u2019t forget the documentation. Over the years, documentation of plugins and functionality has been vital to helping inform users on how to take advantage of the framework."}, {"5b4b": "I wish we had adopted this convention several years before."}, {"cfea": "The README file is going to be seen the most\u2026so make it count. In my case, I opted to introduce people to my personality and dry sense of humor."}, {"2086": "Honestly, seeing tweets like this means the world to me."}, {"0392": "Don\u2019t forget about the rest of your life. Again, I never anticipated the project turning into what it is today."}, {"bafd": "Are you familiar with the anecdote about the frog in a pot of boiling water?"}, {"7c55": "It took me 3\u20134 years, too many, to finally bring in another person to help maintain the project. I kept thinking that I could catch up with all the open pull requests and issues. What I kept telling myself was that folks who know how to fork the project can make their desired changes and work off of that, so reviewing and approving pull requests is a nice-to-happen versus a need-to-happen."}, {"5726": "In practice, it\u2019s somewhere in between. I do feel a bit bad for old pull requests lingering, but I also don\u2019t keep Oh My Zsh as one of the top few projects on my plate."}, {"04e1": "Outside of Oh My Zsh, I run a 19-person agency, play guitar in an instrumental post-rock band, sit on the board of directors of a local homeless shelter non-profit, travel with my camera a lot, ride my motorcycle, ride my bicycle, and try to keep a social life with my friends. Oh My Zsh fits somewhere in amongst all of these."}, {"3ae4": "It\u2019s not at the top of my priority list. It\u2019s not at the bottom. It\u2019s somewhere between. This isn\u2019t an excuse to not being able to keep up with the community, but more of a reminder that those other things should matter to you, too, if you\u2019re about to start your own project."}, {"e203": "(I will write more on the topic of leading an open source project w/maintainers in another story\u2026 \u2764 are you following me?\u00a0\u2764)"}, {"a357": "Don\u2019t forget to have some fun. When you start your project, decide if this is going to be serious work time or play time. Perhaps it can be somewhere in the middle."}, {"6b17": "Oh My Zsh has, always, been a play time activity project for me."}, {"e30e": "Knowing that one of my playful projects has been and continues to be enjoyed by people is such a wonderful feeling."}, {"6285": "Some might call it a passion project. I call it playtime."}, {"a83c": "Interested in my fun open source\u00a0project?"}, {"1d0e": "You can learn more at http://ohmyz.sh."}, {"600e": "If you enjoyed this article, please recommend and/or share it.\u00a0\u2764"}, {"e6e4": "Already using Oh My Zsh? I\u2019d love to learn how you heard about it."}], "child": "923_1\t923_2\t923_3\t923_4\t923_5\t923_6\t923_7\t923_8\t923_9\t923_10\t923_11\t923_12\t923_13\t923_14\t923_15\t923_16\t923_17\t923_18\t923_19\t923_20\t923_21\t923_22\t923_23\t923_24\t923_25923_1\t923_2\t923_3\t923_4\t923_5\t923_6\t923_7\t923_8\t923_9\t923_10\t923_11\t923_12\t923_13\t923_14\t923_15\t923_16\t923_17\t923_18\t923_19\t923_20\t923_21\t923_22\t923_23\t923_24\t923_25923_1\t923_2\t923_3\t923_4\t923_5\t923_6\t923_7\t923_8\t923_9\t923_10\t923_11\t923_12\t923_13\t923_14\t923_15\t923_16\t923_17\t923_18\t923_19\t923_20\t923_21\t923_22\t923_23\t923_24\t923_25"}