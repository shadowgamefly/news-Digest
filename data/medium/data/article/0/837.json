{"parent": "", "title": "How To Communicate Hidden Gestures in Mobile\u00a0App", "author": "Nick Babich", "sentences": [{"829f": "Credits: Julian\u00a0Burford"}, {"3ae8": "How To Communicate Hidden Gestures in Mobile\u00a0App"}, {"f01e": "by Nick\u00a0Babich"}, {"55ed": "Gestures, those little movements of finger and thumb that allow user to interact with an app. Touch interfaces provide many opportunities to use natural gestures like tap, swipe and pinch to get things done, but unlike graphical user interface controls, these interactions are often hidden from users, so unless users have prior knowledge that a gesture exists, they won\u2019t try."}, {"bd20": "How to incorporate hidden gestures? Luckily there are number of visual interaction design techniques for making them known."}, {"df73": "Tutorials and Walkthrough During Onboarding"}, {"e0aa": "Tutorials and walktrhoughs is quite a popular practice for gesture-driven apps. Incorporating tutorials in your app in many cases means showing some instructions to the user to explain the interface. However, UI tutorial isn\u2019t the most elegant way to explain the core functionality of an app. There are two problems with this approach:"}, {"1648": "For example, in Clear app starts with a mandatory 7-page tutorial and users have to patiently read all the information and try to commit it to their memory. That\u2019s bad design because it requires users to work upfront even before they actually try the app."}, {"b6af": "Tutorial in Clear\u00a0app"}, {"863b": "Avoid mandatory multi-step UI walkthrough and try to educate in context of action (when user actually needs it). Given some iteration, tutorial can be transformed into a more gradual discovery:"}, {"ea21": "Focus on a single interaction rather than trying to explain every possible action in user interface"}, {"0af5": "Take this gesture education screen from YouTube app for Android as an example:"}, {"e085": "Youtube app for\u00a0Android"}, {"ee41": "The app has a gesture-based interaction, but doesn\u2019t use tutorial to instruct users. Instead, it uses hints that appear on the first launch for new users, one at a time, as the user reaches the relevant section of the app."}, {"811f": "How To Educate in\u00a0Context"}, {"8e82": "Education in context technique helping users interact with an element or surface in a way they have not done so previously. This technique often includes slight visual cues and subtle animation."}, {"b9fb": "Plain Text\u00a0Command"}, {"ce3a": "This technique is based on text command which prompts users to perform a gesture and describe the result of the interaction in short and clear description."}, {"f214": "Tip: Use ultra-short text for instruction\u200a\u2014\u200athe less text overall, the more likely it is that users will read it and then actually follow that instruction."}, {"70ee": "Credits: Material\u00a0Design"}, {"ae17": "Hint Motion"}, {"0329": "Hint motion (or animated visual hint) shows a preview of how to interact with element when performing the action. For example, Pudding Monsters\u2019 game mechanics are based solely on gestures, but they allow users to get the basic idea of what to do without guessing too much. Animation conveys information about functioning\u200a\u2014\u200aa scenario is showcased with animation and it immediately becomes clear for users what to do."}, {"2aa9": "Hint motion shows a preview of how to interact with an element. Credits: Pudding\u00a0Monsters"}, {"7bbd": "Content Teases"}, {"300d": "Content teases are example of subtle visual clues, which indicate what\u2019s possible. Example below demonstrates a content teases for cards\u200a\u2014\u200ait simply shows that other cards exist behind a current card and this makes it clear that swiping is possible."}, {"63a1": "Exhibit navigation functionality. Credits: Barthelemy Chalvet"}, {"2f00": "Conclusion"}, {"e24a": "The bottom-line is that there\u2019s no one-size-fits-all solution to how to introduce gestures for your users in a mobile or web app. But when it comes to teaching users to use your UIs, I would recommend to do so mainly by educating in context using content teases, progressive disclosure and subtle animations. Tutorials and walkthroughts should be used only as a final resort."}, {"43d8": "Thank you!"}, {"90f3": "Follow UX Planet: Twitter | Facebook"}, {"3612": "Originally published at babich.biz"}], "content": "Credits: Julian\u00a0Burford How To Communicate Hidden Gestures in Mobile\u00a0App by Nick\u00a0Babich Gestures, those little movements of finger and thumb that allow user to interact with an app. Touch interfaces provide many opportunities to use natural gestures like tap, swipe and pinch to get things done, but unlike graphical user interface controls, these interactions are often hidden from users, so unless users have prior knowledge that a gesture exists, they won\u2019t try. How to incorporate hidden gestures? Luckily there are number of visual interaction design techniques for making them known. Tutorials and Walkthrough During Onboarding Tutorials and walktrhoughs is quite a popular practice for gesture-driven apps. Incorporating tutorials in your app in many cases means showing some instructions to the user to explain the interface. However, UI tutorial isn\u2019t the most elegant way to explain the core functionality of an app. There are two problems with this approach: For example, in Clear app starts with a mandatory 7-page tutorial and users have to patiently read all the information and try to commit it to their memory. That\u2019s bad design because it requires users to work upfront even before they actually try the app. Tutorial in Clear\u00a0app Avoid mandatory multi-step UI walkthrough and try to educate in context of action (when user actually needs it). Given some iteration, tutorial can be transformed into a more gradual discovery: Focus on a single interaction rather than trying to explain every possible action in user interface Take this gesture education screen from YouTube app for Android as an example: Youtube app for\u00a0Android The app has a gesture-based interaction, but doesn\u2019t use tutorial to instruct users. Instead, it uses hints that appear on the first launch for new users, one at a time, as the user reaches the relevant section of the app. How To Educate in\u00a0Context Education in context technique helping users interact with an element or surface in a way they have not done so previously. This technique often includes slight visual cues and subtle animation. Plain Text\u00a0Command This technique is based on text command which prompts users to perform a gesture and describe the result of the interaction in short and clear description. Tip: Use ultra-short text for instruction\u200a\u2014\u200athe less text overall, the more likely it is that users will read it and then actually follow that instruction. Credits: Material\u00a0Design Hint Motion Hint motion (or animated visual hint) shows a preview of how to interact with element when performing the action. For example, Pudding Monsters\u2019 game mechanics are based solely on gestures, but they allow users to get the basic idea of what to do without guessing too much. Animation conveys information about functioning\u200a\u2014\u200aa scenario is showcased with animation and it immediately becomes clear for users what to do. Hint motion shows a preview of how to interact with an element. Credits: Pudding\u00a0Monsters Content Teases Content teases are example of subtle visual clues, which indicate what\u2019s possible. Example below demonstrates a content teases for cards\u200a\u2014\u200ait simply shows that other cards exist behind a current card and this makes it clear that swiping is possible. Exhibit navigation functionality. Credits: Barthelemy Chalvet Conclusion The bottom-line is that there\u2019s no one-size-fits-all solution to how to introduce gestures for your users in a mobile or web app. But when it comes to teaching users to use your UIs, I would recommend to do so mainly by educating in context using content teases, progressive disclosure and subtle animations. Tutorials and walkthroughts should be used only as a final resort. Thank you! Follow UX Planet: Twitter | Facebook Originally published at babich.biz ", "name": "837", "child": "837_1\t837_2\t837_3\t837_4\t837_5\t837_6\t837_7\t837_8\t837_9\t837_10\t837_11\t837_12837_1\t837_2\t837_3\t837_4\t837_5\t837_6\t837_7\t837_8\t837_9\t837_10\t837_11\t837_12", "timestamp": "Dec 26, 2016"}