{"name": "2150", "title": "Exploring Bottom Navigation Bar in\u00a0Android", "sentences": [{"820a": "Exploring Bottom Navigation Bar in\u00a0Android"}, {"2d19": "For last few years, Android design guidelines have been strongly demotivating the Android developers to turn to a flat view, contrary to what we generally see in any iOS app. Most of the iOS apps have a flat bar at the bottom of their views, giving people access to the most basic navigation option throughout their apps. On the other hand, what we can find on Android, is a Side Navigation Drawer, that shows us the various parts of the Android app. The basic problem with this is that, as the navigation options are out of users\u2019 view, they tend to often forget the various features developers are offering them, and the app becomes less handy for its users."}, {"71c5": "A few months ago, we have seen the change in Material Design Guidelines, introducing the Bottom Navigation Bar for Android. Although Android has included it in their guidelines, there was no easy way to implement it. We needed to either design and implement it all on our own or depend on third party libraries. But this October 2016, Android released their latest version of Android Support Library, revision 25.0.0, where the native support to add Bottom Navigation Bar to Android has been added. It has a very limited set of features for now, but we can expect Google to be adding more features very soon. We will have a look at the Bottom Navigation Bar in this blog."}, {"387f": "Material Guidelines"}, {"25d8": "Here\u2019s a detailed description of what Android tells us where and how should we use Bottom Navigation Bar to maintain a Material Design in our app:"}, {"9a24": "1. Where: Only those destinations that require direct access should be in Bottom Navigation Bar."}, {"6005": "2. How many: There can be only 3 to 5 top-level destinations in Bottom Navigation Bar. If you have 1 or 2 top-level destinations, use Tab. If you have more than 5, go for Side Navigation Drawer."}, {"09f8": "3. Dimens: Each option should have the width of the view divided by the number of actions (with a max of 168dp and a minimum of 80dp). The height is 56dp and each icon is 24 x 24dp. It should have padding 6dp above icon (active view), 8dp above icon (inactive view), 10dp under the text, 12dp left and right of the text. It should have an elevation of 8dp. As Snack bars have lower elevation (6dp), they appear behind the bottom navigation bar."}, {"6cac": "Image from Material Design Guidelines by\u00a0Google"}, {"388f": "Image from Material Design Guidelines by\u00a0Google"}, {"af69": "4. Typography: Roboto Regular 14sp (active view) and Roboto Regular 12sp (inactive view). If yo are using your own fonts, change accordingly based on how it should look given the fonts were Roboto."}, {"2a06": "5. Colors: The active icon should be tinted with the app\u2019s primary color. Black or white color is to be used if the bottom navigation bar is already colored."}, {"e8d7": "6. View: If the view is in focus, that view\u2019s icon and text label are to be displayed. If there\u2019re only three actions, both icons and text labels are to be displayed at all times. If there are four or five actions, inactive views should be displayed as icons only."}, {"f90c": "7. Action: Navigation through the bottom navigation bar should reset the task state. If the user taps on Active action, it should navigate the user to the top of the view. No swipe action is supported."}, {"95df": "8. Caution: Developers should be careful when combining bottom navigation with tabs. This might cause confusion when navigating an app."}, {"b7c0": "Tutorial"}, {"d792": "Okay, enough chit-chat! Now time to code."}, {"1078": "compile \u2018com.android.support:appcompat-v7:25.0.0\u2019compile \u2018com.android.support:support-v4:25.0.0\u2019compile \u2018com.android.support:design:25.0.0\u2019"}, {"03c0": "Let Gradle sync."}, {"b8a0": "3. Create menu package in res directory. Create an XML file named my_navigation_items.xml. Add code to define the navigation options with name and icon here:"}, {"d9b2": "<?xml version=\u201d1.0\" encoding=\u201dutf-8\"?><menu xmlns:android=\u201dhttp://schemas.android.com/apk/res/android\">"}, {"2946": "    <item     android:id=\u201d@+id/menu_dialer\u201d     android:icon=\u201d@android:drawable/ic_dialog_dialer\u201d     android:title=\u201dMenu\u201d/>"}, {"c8f9": "    <item     android:id=\u201d@+id/menu_email\u201d     android:icon=\u201d@android:drawable/ic_dialog_email\u201d     android:title=\u201dEmail\u201d/>"}, {"5cce": "    <item     android:id=\u201d@+id/menu_map\u201d     android:icon=\u201d@android:drawable/ic_dialog_map\u201d     android:title=\u201dMap\u201d/>"}, {"523d": "</menu>"}, {"5c2b": "4. Open colors.xml in values directory. Add necessary color palette. I have added these:"}, {"2dd9": "<?xml version=\u201d1.0\" encoding=\u201dutf-8\"?><resources>    <color name=\u201dcolorPrimary\u201d>#3F51B5</color>    <color name=\u201dcolorPrimaryDark\u201d>#303F9F</color>    <color name=\u201dcolorPrimaryLight\u201d>#4d63de</color>    <color name=\u201dcolorAccent\u201d>#FF4081</color>    <color name=\u201dcolorText\u201d>#FFFFFF</color>    <color name=\u201dcolorIcon\u201d>#FFFFFF</color></resources>"}, {"840b": "5. Open the layout where to add the Bottom Navigation Bar (e.g layout_main.xml), and add:"}, {"b54d": "<?xml version=\u201d1.0\" encoding=\u201dutf-8\"?><LinearLayout xmlns:android=\u201dhttp://schemas.android.com/apk/res/android\" xmlns:tools=\u201dhttp://schemas.android.com/tools\" xmlns:app=\u201dhttp://schemas.android.com/apk/res-auto\" android:layout_width=\u201dmatch_parent\u201d android:layout_height=\u201dmatch_parent\u201d android:orientation=\u201dvertical\u201d tools:context=\u201dnav.bottom.MainActivity\u201d>"}, {"c821": "    <FrameLayout     android:layout_width=\u201dmatch_parent\u201d     android:id=\u201d@+id/frameLayout\u201d     android:layout_height=\u201d0dp\u201d     android:layout_weight=\u201d1\"/>"}, {"7b82": "    <!-- This is the Bottom Bavigation Bar -->    <android.support.design.widget.BottomNavigationView     android:id=\u201d@+id/navigation\u201d     android:layout_width=\u201dmatch_parent\u201d     android:layout_height=\u201dwrap_content\u201d     android:layout_gravity=\u201dstart\u201d     app:menu=\u201d@menu/my_navigation_items\u201d     app:itemBackground=\u201d@color/colorPrimaryLight\u201d     app:itemIconTint=\u201d@color/colorIcon\u201d     app:itemTextColor=\u201d@color/colorText\u201d/>"}, {"bafc": "</LinearLayout>"}, {"20a2": "6. Build and Run\u00a0!!"}, {"d9b8": "Now you can see the bottom navigation bar working!"}, {"f83d": "Customization"}, {"07dd": "Now, we\u2019ll work towards viewing fragments on clicking the actions and other customization."}, {"68dd": "1. Create three fragments with Layout. I\u2019ve created three fragments name FirstFragment, SecondFragment and ThirdFragment. I\u2019m adding the code of FirstFragment class and its layout here:"}, {"53a9": "The Fragment class:"}, {"7716": "And it\u2019s layout:"}, {"30fc": "<FrameLayoutxmlns:android=\u201dhttp://schemas.android.com/apk/res/android\" xmlns:tools=\u201dhttp://schemas.android.com/tools\" android:layout_width=\u201dmatch_parent\u201d android:layout_height=\u201dmatch_parent\u201d tools:context=\u201dnav.bottom.FirstFragment\u201d>"}, {"7970": "    <TextView     android:layout_width=\u201dmatch_parent\u201d     android:layout_height=\u201dmatch_parent\u201d     android:gravity=\u201dcenter\u201d     android:text=\u201dFirst Fragment\u201d     android:textColor=\u201d#000000\"/>"}, {"43df": "</FrameLayout>"}, {"7eca": "The other two are just similar to this one. Change and customize as you wish."}, {"cfc4": "2. Add this segment to onCreate() function of the MainActivity.java code to change views based on clicks."}, {"1ac0": "3, Now, make your MainActivity implement the listener for the Fragments created, like this:"}, {"1dc4": "public class MainActivity extends AppCompatActivity implements FirstFragment.OnFragmentInteractionListener, SecondFragment.OnFragmentInteractionListener, ThirdFragment.OnFragmentInteractionListener {"}, {"7877": "4. Now build and run!"}, {"fdb1": "Now, if you want to change the icon and text color of Bottom Navigation Bar on selecting and deselecting actions, make color directory in res folder and create this file background.xml:"}, {"e282": "<?xml version=\"1.0\" encoding=\"utf-8\"?><selector xmlns:android=\"http://schemas.android.com/apk/res/android\">    <item        android:color=\"#CCCCCC\"        android:state_checked=\"false\"/>    <item        android:color=\"@color/colorText\"        android:state_checked=\"true\"/></selector>"}, {"229a": "And change the xml view like this:"}, {"b827": "<android.support.design.widget.BottomNavigationView    android:id=\"@+id/navigation\"    android:layout_width=\"match_parent\"    android:layout_height=\"wrap_content\"    android:layout_gravity=\"start\"    app:menu=\"@menu/my_navigation_items\"    app:itemBackground=\"@color/colorPrimaryLight\"    app:itemIconTint=\"@color/background\"    app:itemTextColor=\"@color/background\"/>"}, {"82dc": "Now if you build and run, you can find this view:"}, {"fa58": "Finally, if you want to add more than 3 options, just add items in my_navigation_items.xml as you need. Remember, keep it in between 3 to 5 items to maintain Material design guidelines."}, {"4ac2": "This is the end of the tutorial on Bottom Navigation Bar. This article will be updated more, when we get new functionalities on bottom navigation bar."}, {"f0b2": "This ends the blog on Bottom Navigation Bar on Android. Hope you liked it as much as I did!"}, {"ab4c": "Feel free to comment, like, recommend, share! And follow My Online Cafe to get more updates on Tech Stuff!"}, {"3ddf": "Riddhiman Adib (@adib2149) | TwitterThe latest Tweets from Riddhiman Adib (@adib2149): \"Amazing article, if u wanna know where tech is heading in 10-20\u2026twitter.com"}], "child": "2150_1\t2150_2\t2150_3\t2150_4\t2150_5\t2150_62150_1\t2150_2\t2150_3\t2150_4\t2150_5\t2150_62150_1\t2150_2\t2150_3\t2150_4\t2150_5\t2150_62150_1\t2150_2\t2150_3\t2150_4\t2150_5\t2150_62150_1\t2150_2\t2150_3\t2150_4\t2150_5\t2150_62150_1\t2150_2\t2150_3\t2150_4\t2150_5\t2150_62150_1\t2150_2\t2150_3\t2150_4\t2150_5\t2150_6", "timestamp": "Oct 25, 2016", "content": "Exploring Bottom Navigation Bar in\u00a0Android For last few years, Android design guidelines have been strongly demotivating the Android developers to turn to a flat view, contrary to what we generally see in any iOS app. Most of the iOS apps have a flat bar at the bottom of their views, giving people access to the most basic navigation option throughout their apps. On the other hand, what we can find on Android, is a Side Navigation Drawer, that shows us the various parts of the Android app. The basic problem with this is that, as the navigation options are out of users\u2019 view, they tend to often forget the various features developers are offering them, and the app becomes less handy for its users. A few months ago, we have seen the change in Material Design Guidelines, introducing the Bottom Navigation Bar for Android. Although Android has included it in their guidelines, there was no easy way to implement it. We needed to either design and implement it all on our own or depend on third party libraries. But this October 2016, Android released their latest version of Android Support Library, revision 25.0.0, where the native support to add Bottom Navigation Bar to Android has been added. It has a very limited set of features for now, but we can expect Google to be adding more features very soon. We will have a look at the Bottom Navigation Bar in this blog. Material Guidelines Here\u2019s a detailed description of what Android tells us where and how should we use Bottom Navigation Bar to maintain a Material Design in our app: 1. Where: Only those destinations that require direct access should be in Bottom Navigation Bar. 2. How many: There can be only 3 to 5 top-level destinations in Bottom Navigation Bar. If you have 1 or 2 top-level destinations, use Tab. If you have more than 5, go for Side Navigation Drawer. 3. Dimens: Each option should have the width of the view divided by the number of actions (with a max of 168dp and a minimum of 80dp). The height is 56dp and each icon is 24 x 24dp. It should have padding 6dp above icon (active view), 8dp above icon (inactive view), 10dp under the text, 12dp left and right of the text. It should have an elevation of 8dp. As Snack bars have lower elevation (6dp), they appear behind the bottom navigation bar. Image from Material Design Guidelines by\u00a0Google Image from Material Design Guidelines by\u00a0Google 4. Typography: Roboto Regular 14sp (active view) and Roboto Regular 12sp (inactive view). If yo are using your own fonts, change accordingly based on how it should look given the fonts were Roboto. 5. Colors: The active icon should be tinted with the app\u2019s primary color. Black or white color is to be used if the bottom navigation bar is already colored. 6. View: If the view is in focus, that view\u2019s icon and text label are to be displayed. If there\u2019re only three actions, both icons and text labels are to be displayed at all times. If there are four or five actions, inactive views should be displayed as icons only. 7. Action: Navigation through the bottom navigation bar should reset the task state. If the user taps on Active action, it should navigate the user to the top of the view. No swipe action is supported. 8. Caution: Developers should be careful when combining bottom navigation with tabs. This might cause confusion when navigating an app. Tutorial Okay, enough chit-chat! Now time to code. compile \u2018com.android.support:appcompat-v7:25.0.0\u2019compile \u2018com.android.support:support-v4:25.0.0\u2019compile \u2018com.android.support:design:25.0.0\u2019 Let Gradle sync. 3. Create menu package in res directory. Create an XML file named my_navigation_items.xml. Add code to define the navigation options with name and icon here: <?xml version=\u201d1.0\" encoding=\u201dutf-8\"?><menu xmlns:android=\u201dhttp://schemas.android.com/apk/res/android\">     <item     android:id=\u201d@+id/menu_dialer\u201d     android:icon=\u201d@android:drawable/ic_dialog_dialer\u201d     android:title=\u201dMenu\u201d/>     <item     android:id=\u201d@+id/menu_email\u201d     android:icon=\u201d@android:drawable/ic_dialog_email\u201d     android:title=\u201dEmail\u201d/>     <item     android:id=\u201d@+id/menu_map\u201d     android:icon=\u201d@android:drawable/ic_dialog_map\u201d     android:title=\u201dMap\u201d/> </menu> 4. Open colors.xml in values directory. Add necessary color palette. I have added these: <?xml version=\u201d1.0\" encoding=\u201dutf-8\"?><resources>    <color name=\u201dcolorPrimary\u201d>#3F51B5</color>    <color name=\u201dcolorPrimaryDark\u201d>#303F9F</color>    <color name=\u201dcolorPrimaryLight\u201d>#4d63de</color>    <color name=\u201dcolorAccent\u201d>#FF4081</color>    <color name=\u201dcolorText\u201d>#FFFFFF</color>    <color name=\u201dcolorIcon\u201d>#FFFFFF</color></resources> 5. Open the layout where to add the Bottom Navigation Bar (e.g layout_main.xml), and add: <?xml version=\u201d1.0\" encoding=\u201dutf-8\"?><LinearLayout xmlns:android=\u201dhttp://schemas.android.com/apk/res/android\" xmlns:tools=\u201dhttp://schemas.android.com/tools\" xmlns:app=\u201dhttp://schemas.android.com/apk/res-auto\" android:layout_width=\u201dmatch_parent\u201d android:layout_height=\u201dmatch_parent\u201d android:orientation=\u201dvertical\u201d tools:context=\u201dnav.bottom.MainActivity\u201d>     <FrameLayout     android:layout_width=\u201dmatch_parent\u201d     android:id=\u201d@+id/frameLayout\u201d     android:layout_height=\u201d0dp\u201d     android:layout_weight=\u201d1\"/>     <!-- This is the Bottom Bavigation Bar -->    <android.support.design.widget.BottomNavigationView     android:id=\u201d@+id/navigation\u201d     android:layout_width=\u201dmatch_parent\u201d     android:layout_height=\u201dwrap_content\u201d     android:layout_gravity=\u201dstart\u201d     app:menu=\u201d@menu/my_navigation_items\u201d     app:itemBackground=\u201d@color/colorPrimaryLight\u201d     app:itemIconTint=\u201d@color/colorIcon\u201d     app:itemTextColor=\u201d@color/colorText\u201d/> </LinearLayout> 6. Build and Run\u00a0!! Now you can see the bottom navigation bar working! Customization Now, we\u2019ll work towards viewing fragments on clicking the actions and other customization. 1. Create three fragments with Layout. I\u2019ve created three fragments name FirstFragment, SecondFragment and ThirdFragment. I\u2019m adding the code of FirstFragment class and its layout here: The Fragment class: And it\u2019s layout: <FrameLayoutxmlns:android=\u201dhttp://schemas.android.com/apk/res/android\" xmlns:tools=\u201dhttp://schemas.android.com/tools\" android:layout_width=\u201dmatch_parent\u201d android:layout_height=\u201dmatch_parent\u201d tools:context=\u201dnav.bottom.FirstFragment\u201d>     <TextView     android:layout_width=\u201dmatch_parent\u201d     android:layout_height=\u201dmatch_parent\u201d     android:gravity=\u201dcenter\u201d     android:text=\u201dFirst Fragment\u201d     android:textColor=\u201d#000000\"/> </FrameLayout> The other two are just similar to this one. Change and customize as you wish. 2. Add this segment to onCreate() function of the MainActivity.java code to change views based on clicks. 3, Now, make your MainActivity implement the listener for the Fragments created, like this: public class MainActivity extends AppCompatActivity implements FirstFragment.OnFragmentInteractionListener, SecondFragment.OnFragmentInteractionListener, ThirdFragment.OnFragmentInteractionListener { 4. Now build and run! Now, if you want to change the icon and text color of Bottom Navigation Bar on selecting and deselecting actions, make color directory in res folder and create this file background.xml: <?xml version=\"1.0\" encoding=\"utf-8\"?><selector xmlns:android=\"http://schemas.android.com/apk/res/android\">    <item        android:color=\"#CCCCCC\"        android:state_checked=\"false\"/>    <item        android:color=\"@color/colorText\"        android:state_checked=\"true\"/></selector> And change the xml view like this: <android.support.design.widget.BottomNavigationView    android:id=\"@+id/navigation\"    android:layout_width=\"match_parent\"    android:layout_height=\"wrap_content\"    android:layout_gravity=\"start\"    app:menu=\"@menu/my_navigation_items\"    app:itemBackground=\"@color/colorPrimaryLight\"    app:itemIconTint=\"@color/background\"    app:itemTextColor=\"@color/background\"/> Now if you build and run, you can find this view: Finally, if you want to add more than 3 options, just add items in my_navigation_items.xml as you need. Remember, keep it in between 3 to 5 items to maintain Material design guidelines. This is the end of the tutorial on Bottom Navigation Bar. This article will be updated more, when we get new functionalities on bottom navigation bar. This ends the blog on Bottom Navigation Bar on Android. Hope you liked it as much as I did! Feel free to comment, like, recommend, share! And follow My Online Cafe to get more updates on Tech Stuff! Riddhiman Adib (@adib2149) | TwitterThe latest Tweets from Riddhiman Adib (@adib2149): \"Amazing article, if u wanna know where tech is heading in 10-20\u2026twitter.com ", "author": "Riddhiman Adib", "parent": ""}