{"parent": "", "title": "rems and ems, and why you probably don\u2019t need\u00a0them", "author": "David Gilbertson", "sentences": [{"7e58": "rems and ems, and why you probably don\u2019t need\u00a0them"}, {"55c2": "You may have heard that when defining the size of things in your website, you should be using em or rem units, rather than good old fashioned pixels."}, {"d93f": "You\u2019ve probably heard mumblings like \u2018accessible\u2019 and \u2018fluid\u2019 and \u2018flexible\u2019 and thought it sounded like a pretty good idea. Maybe you even feel like using only pixels is an amateur move."}, {"beb9": "Well I have some fantastic news for you. You don\u2019t need to mess up your life with these pesky units."}, {"0ff4": "Pixels are just fine. In fact it turns out that pixels are really good at defining the size you want things to be."}, {"c557": "In an ideal world, everyone would just believe everything I say without me having to back it up with \u2018evidence\u2019. But I have been told this is not the case, so please, follow along as I begrudgingly assess each of the reasons for using these flimflam units of measure."}, {"383e": "#1 It\u2019s better for accessibility"}, {"994b": "Or more specifically: \u201cuse rems and your layout will scale better if the user zooms.\u201d"}, {"0986": "People tend to overthink accessibility. I saw a question the other day (a YouTube comment no less)\u200a\u2014\u200asomeone looking for an \u201caccessibility testing tool\u201d. Something \u201cmore thorough\u201d than just a WCAG compliance thing."}, {"7076": "Here, I made one for ya:"}, {"9437": "\u201cView your site like someone that can\u2019t view your\u00a0site\u201d"}, {"2653": "I also sell a bigger one for monitors up to 30\" (it\u2019s a towel). Then there\u2019s the \u201cuniversal\u201d model, which is a pillowcase for your head."}, {"409b": "My point: you don\u2019t need in depth knowledge and fancy tools for working out if rems and ems are \u2018better for accessibility\u2019*\u200a\u2014\u200ajust imagine that you are someone with bad eyesight. If you have a terrible imagination, wrap your screen in ClingWrap (or whatever you call ClingWrap in your weird country)."}, {"50ad": "*Of course accessibility is not just about readability, but that\u2019s what we\u2019re talking about here."}, {"725f": "Now ask your ill-sighted self, which of these three things would you do to make your computer more readable:"}, {"22c8": "I don\u2019t know about you, but if I had trouble reading small text, I\u2019d bump up the default font size for the OS and forget about it."}, {"2973": "(Handy for presentations, too.)"}, {"205b": "Let\u2019s dive a little deeper\u2026"}, {"f404": "For the sake of investigation, I\u2019ve whipped up a simple demo site. (Here\u2019s the jsbin if for some inexplicable reason you\u2019re interested.)"}, {"ea70": "The three sections you can see are the same HTML and CSS repeated, except that all units in the top one are pixels, the middle one is all ems and the bottom one is all rems."}, {"5330": "This is how they all look at the default zoom (where 1em = 16px)."}, {"df38": "Find that text hard to read? That\u2019s empathy you\u2019re feeling, my\u00a0friend."}, {"2aa8": "Here we are, Chrome in Windows, with the OS text zoom at 150%."}, {"c764": "It\u2019s just like moving your face closer to the\u00a0screen."}, {"2089": "Next up, I\u2019ll set the OS zoom back to 100% and turn the browser zoom up. This is for sites that think 12px for major navigation text is acceptable because you can fit more on the screen. Not naming any names, but\u00a0\u2026"}, {"e707": "It\u2019s Amazon. 13px default font-size, 12px for some top level navigation. Uncool."}, {"c336": "Luckily, browser vendors don\u2019t share Amazon\u2019s disdain for the elderly, and allow you to zoom with little more than a keypress and a scroll."}, {"5f89": "I\u2019ve got eyes like a beagle and still I zoom for some sites. I do it for the Chrome DevTools too, the default font size is 12px, but somehow I forgive."}, {"426f": "(Side note: if you find the font-size on Wikipedia a bit small, or don\u2019t like the way the text stretches the whole way across the page, I apparently wrote a Chrome extension called Skinny in 2013 to keep text lines short and give wikipedia a font-size bump.)"}, {"2f28": "Back to it. Let\u2019s take a look at those examples with the browser zoom at 150%."}, {"0482": "The browser UI (tab name, URL etc) is small again, but the page content looks the same."}, {"264a": "And finally changing the default browser font size. We\u2019ll try Firefox first, here it is with no zoom:"}, {"7af2": "And after setting the \u2018minimum font size\u2019 to 20px:"}, {"4906": "The nav is narrower in the px version, and the header text is a bit bigger."}, {"9608": "And here we are in Chrome with the text size set to \u201cLarge\u201d."}, {"7031": "Aha, finally a significant difference. The title that was hard coded to 18px has not changed size, nor has the width of the teal navigation menu which is set to 100px wide."}, {"90db": "You might think this is a clear win for rems, but it ain\u2019t."}, {"a431": "Although we have no evidence as to whether or not people rely on changing their browser text size, we do have some indisputable facts."}, {"5005": "The above facts, to me, make it crystal clear that browser text size adjustment is of no use in the real world. And so I will not take this setting into account in my decision making process."}, {"7438": "That\u2019s the \u2018better for accessibility\u2019 argument blown out of the water, now moving along to\u00a0\u2026"}, {"92f4": "#2 Breakpoints scale when you use\u00a0rems/ems"}, {"de41": "Or to put it another way, if you define your breakpoints in pixels, they are fixed and won\u2019t change if your users zoom the page. Because a pixel is a pixel, right?"}, {"369e": "Well that\u2019s just a lie. (I\u2019m guessing that at some point in the past it was true, people don\u2019t just make things up, do they?)"}, {"68b6": "My gorgeous example site has a breakpoint at 600px. That\u2019s set as 37.5ems for the middle one and 37.5rems for the bottom. With no zoom, these all equate to 600px."}, {"ec1d": "Below this size, the sender and subject text is stacked vertically, above this they are side-by-side."}, {"32c1": "Let\u2019s fire up IE11 for a change of pace. I\u2019ll zoom the page to 150%, then drag the window so it\u2019s juuuust about 900px wide. (For the mathematically challenged, that\u2019s 600px \u00d7 150%.)"}, {"ff58": "So, what do you think IE11 will do?"}, {"7ba9": "Will it think that the breakpoint is absolutely at 600px at all times, and therefore show the big screen view? Or will it adjust that breakpoint by 150% so the change occurs at 900px. In that case we\u2019ll get the small screen view (text vertically stacked)?"}, {"712e": "Well, I was surprised enough to find that IE did indeed scale my breakpoints as I zoomed."}, {"3e57": "A 900px wide\u00a0window."}, {"d429": "And this is way back in IE11. What about some other browsers\u2026"}, {"ce71": "Safari did exactly what I expected. (Be weird.)"}, {"a101": "It scaled my 600px breakpoint reasonably, but not quite to 900. It\u2019s good enough though, here the window is plenty wider than the 600px breakpoint, but with the zoom at 150%, all three have displayed as though they were below the breakpoint."}, {"3de2": "So if you\u2019re worried about your breakpoints not scaling if you use pixels, don\u2019t be. Or at least go and find a browser that doesn\u2019t scale them, and make a decision based on its browser share. If you must support IE8, and it turns out that it doesn\u2019t scale breakpoints you may have a legit reason to use rems. (Of course IE8 doesn\u2019t support media queries or rems, but let us not dwell.)"}, {"09a9": "#3 Use ems for \u2018dynamic\u2019 spacing around\u00a0text"}, {"2c28": "This is almost a good idea, I see where the proponents are coming from. \u201cWhy change font-size and padding, when you can use ems for the padding, then only change the font size?\u201d they say in their outside voice."}, {"8fb0": "I get it, I really do. I just prefer to be precise and set, say, the font-size and the padding for a button so that it\u2019s exactly 60px tall on big screens, and exactly 50px on small screens, visually matching my exactly 60px/50px header bar."}, {"d6b1": "And if my designs are coming from a professional designer, I\u2019m yet to come across one that doesn\u2019t care exactly what size a button is. Does such a creature even exist?"}, {"62d4": "But if you\u2019re designing a site yourself, and don\u2019t really care exactly how tall that button is, or exactly how far your paragraph text is from the heading above, and want the spacing to grow as the font-size changes, then using ems for margin/padding is the right tool for the job."}, {"6a1b": "Now, on to one of the more baffling \u2018reasons\u2019 for using rems and ems. (I don\u2019t know why I\u2019m numbering these headings.)"}, {"f6e2": "#4 Make modules that you can resize simply by changing the root element font-size"}, {"0d69": "These words that you have so graciously been reading were spurred by a blog post that came out a few weeks back, Design a responsive site with em-based sizing."}, {"85a8": "It explains (accurately) that by using a combination of rems and ems, you can create a component (say, a modal window) that can scale to different sizes just by changing a single font-size on the root element of the component."}, {"cf0d": "It makes sense. In the same way that \u201cif you often murder people, it is handy to carry a shovel in the boot of your car\u201d makes sense."}, {"0957": "It\u2019s great advice I\u2019m sure. But I can\u2019t remember the last time I did a murder, and I can\u2019t recall the last time I wanted a component that grew in all dimensions, paddings and font-sizes, by the same factor, by changing just one value."}, {"fd6d": "So here\u2019s my advice. When you\u2019re starting a project, ask yourself: will I need to create any modules that will sometimes be a certain size, and other times be exactly 10% bigger in every dimension. If the answer is yes, follow the advice in the blog post above, it is exactly what you are looking for. And carry a shovel in your boot, ya psycho."}, {"d2c2": "You can scale all the text on your page with one\u00a0property"}, {"0b5f": "(I\u2019ve decided not to number the headings anymore.)"}, {"79f1": "Another befuddling reason to use ems goes like this: you have defined font-size in your CSS in, totally, like, 50 different places. You want all 50 to be bigger on bigger screens, and smaller on smaller screen, and that\u2019s a lot of media queries."}, {"7167": "This is apparently best solved by using rems everywhere, then changing the root font size in your media queries. Boom! All your text will change size at once."}, {"6465": "I think this advice can be safely ignored for two reasons. I shall list them for you."}, {"614c": "Here\u2019s the thing, when you have a separate file just for typography, and you have, say, 12 styles in there, and for each style you have different sizes for four screen sizes, that\u2019s 48 different font-size declarations and probably line-heights, maybe margins and letter-spacings too. As Winston Churchill once said, \u201cthat\u2019s a lot of stuff\u201d."}, {"6a32": "Now, it\u2019s easy to see all this and think \u201coh no, that\u2019s a lot of repetition, we need to do this a different way\u200a\u2014\u200ano matter what the cost\u200a\u2014\u200ato avoid repetition.\u201d"}, {"396e": "I disagree. A lot. Too often I see complexity introduced into apps in the name of The Almighty DRY. Don\u2019t underestimate how much complexity is introduced when you mix multiple units. NASA used two different units on their Mars orbiter, and they still can\u2019t find it."}, {"a4a7": "Don\u2019t let your website get lost in space."}, {"3ca8": "Oh and it\u2019s not just different units, but having text in some part of your app that changes size based on the font-size in some other place? That\u2019s the antithesis of encapsulation, it says pish to determinism, and is just generally asking for trouble."}, {"7668": "So\u2026 think your typography through, set it up once, do it in pixels, cope with a bit of repetition, bask in the certainly that your text will be the size you told it to be, then forget about it."}, {"15d6": "That rant went on for much longer than what you just witnessed, but I wrote the rest out in a letter and didn\u2019t post it."}, {"1bee": "In conclusion"}, {"f713": "I think it all boils down to this: there are times when you should use rems and ems\u200a\u2014\u200athey\u2019re in the spec for a reason. But the scenarios in which you need them are fewer and farther between than the prevailing wisdom would suggest."}, {"1093": "So don\u2019t go looking for a reason to use ems and rems. It is enough to what they do. Use pixels, and if a scenario pops up where ems or rems are the better tool for the job, go for it."}, {"22bf": "Bonus round; on the topic of\u00a0units"}, {"feaa": "The below have little to do with this article, so I shall list them with no real explanation of what they\u2019re doing here and offer no further outro. It will be unsatisfying."}], "content": "rems and ems, and why you probably don\u2019t need\u00a0them You may have heard that when defining the size of things in your website, you should be using em or rem units, rather than good old fashioned pixels. You\u2019ve probably heard mumblings like \u2018accessible\u2019 and \u2018fluid\u2019 and \u2018flexible\u2019 and thought it sounded like a pretty good idea. Maybe you even feel like using only pixels is an amateur move. Well I have some fantastic news for you. You don\u2019t need to mess up your life with these pesky units. Pixels are just fine. In fact it turns out that pixels are really good at defining the size you want things to be. In an ideal world, everyone would just believe everything I say without me having to back it up with \u2018evidence\u2019. But I have been told this is not the case, so please, follow along as I begrudgingly assess each of the reasons for using these flimflam units of measure. #1 It\u2019s better for accessibility Or more specifically: \u201cuse rems and your layout will scale better if the user zooms.\u201d People tend to overthink accessibility. I saw a question the other day (a YouTube comment no less)\u200a\u2014\u200asomeone looking for an \u201caccessibility testing tool\u201d. Something \u201cmore thorough\u201d than just a WCAG compliance thing. Here, I made one for ya: \u201cView your site like someone that can\u2019t view your\u00a0site\u201d I also sell a bigger one for monitors up to 30\" (it\u2019s a towel). Then there\u2019s the \u201cuniversal\u201d model, which is a pillowcase for your head. My point: you don\u2019t need in depth knowledge and fancy tools for working out if rems and ems are \u2018better for accessibility\u2019*\u200a\u2014\u200ajust imagine that you are someone with bad eyesight. If you have a terrible imagination, wrap your screen in ClingWrap (or whatever you call ClingWrap in your weird country). *Of course accessibility is not just about readability, but that\u2019s what we\u2019re talking about here. Now ask your ill-sighted self, which of these three things would you do to make your computer more readable: I don\u2019t know about you, but if I had trouble reading small text, I\u2019d bump up the default font size for the OS and forget about it. (Handy for presentations, too.) Let\u2019s dive a little deeper\u2026 For the sake of investigation, I\u2019ve whipped up a simple demo site. (Here\u2019s the jsbin if for some inexplicable reason you\u2019re interested.) The three sections you can see are the same HTML and CSS repeated, except that all units in the top one are pixels, the middle one is all ems and the bottom one is all rems. This is how they all look at the default zoom (where 1em = 16px). Find that text hard to read? That\u2019s empathy you\u2019re feeling, my\u00a0friend. Here we are, Chrome in Windows, with the OS text zoom at 150%. It\u2019s just like moving your face closer to the\u00a0screen. Next up, I\u2019ll set the OS zoom back to 100% and turn the browser zoom up. This is for sites that think 12px for major navigation text is acceptable because you can fit more on the screen. Not naming any names, but\u00a0\u2026 It\u2019s Amazon. 13px default font-size, 12px for some top level navigation. Uncool. Luckily, browser vendors don\u2019t share Amazon\u2019s disdain for the elderly, and allow you to zoom with little more than a keypress and a scroll. I\u2019ve got eyes like a beagle and still I zoom for some sites. I do it for the Chrome DevTools too, the default font size is 12px, but somehow I forgive. (Side note: if you find the font-size on Wikipedia a bit small, or don\u2019t like the way the text stretches the whole way across the page, I apparently wrote a Chrome extension called Skinny in 2013 to keep text lines short and give wikipedia a font-size bump.) Back to it. Let\u2019s take a look at those examples with the browser zoom at 150%. The browser UI (tab name, URL etc) is small again, but the page content looks the same. And finally changing the default browser font size. We\u2019ll try Firefox first, here it is with no zoom: And after setting the \u2018minimum font size\u2019 to 20px: The nav is narrower in the px version, and the header text is a bit bigger. And here we are in Chrome with the text size set to \u201cLarge\u201d. Aha, finally a significant difference. The title that was hard coded to 18px has not changed size, nor has the width of the teal navigation menu which is set to 100px wide. You might think this is a clear win for rems, but it ain\u2019t. Although we have no evidence as to whether or not people rely on changing their browser text size, we do have some indisputable facts. The above facts, to me, make it crystal clear that browser text size adjustment is of no use in the real world. And so I will not take this setting into account in my decision making process. That\u2019s the \u2018better for accessibility\u2019 argument blown out of the water, now moving along to\u00a0\u2026 #2 Breakpoints scale when you use\u00a0rems/ems Or to put it another way, if you define your breakpoints in pixels, they are fixed and won\u2019t change if your users zoom the page. Because a pixel is a pixel, right? Well that\u2019s just a lie. (I\u2019m guessing that at some point in the past it was true, people don\u2019t just make things up, do they?) My gorgeous example site has a breakpoint at 600px. That\u2019s set as 37.5ems for the middle one and 37.5rems for the bottom. With no zoom, these all equate to 600px. Below this size, the sender and subject text is stacked vertically, above this they are side-by-side. Let\u2019s fire up IE11 for a change of pace. I\u2019ll zoom the page to 150%, then drag the window so it\u2019s juuuust about 900px wide. (For the mathematically challenged, that\u2019s 600px \u00d7 150%.) So, what do you think IE11 will do? Will it think that the breakpoint is absolutely at 600px at all times, and therefore show the big screen view? Or will it adjust that breakpoint by 150% so the change occurs at 900px. In that case we\u2019ll get the small screen view (text vertically stacked)? Well, I was surprised enough to find that IE did indeed scale my breakpoints as I zoomed. A 900px wide\u00a0window. And this is way back in IE11. What about some other browsers\u2026 Safari did exactly what I expected. (Be weird.) It scaled my 600px breakpoint reasonably, but not quite to 900. It\u2019s good enough though, here the window is plenty wider than the 600px breakpoint, but with the zoom at 150%, all three have displayed as though they were below the breakpoint. So if you\u2019re worried about your breakpoints not scaling if you use pixels, don\u2019t be. Or at least go and find a browser that doesn\u2019t scale them, and make a decision based on its browser share. If you must support IE8, and it turns out that it doesn\u2019t scale breakpoints you may have a legit reason to use rems. (Of course IE8 doesn\u2019t support media queries or rems, but let us not dwell.) #3 Use ems for \u2018dynamic\u2019 spacing around\u00a0text This is almost a good idea, I see where the proponents are coming from. \u201cWhy change font-size and padding, when you can use ems for the padding, then only change the font size?\u201d they say in their outside voice. I get it, I really do. I just prefer to be precise and set, say, the font-size and the padding for a button so that it\u2019s exactly 60px tall on big screens, and exactly 50px on small screens, visually matching my exactly 60px/50px header bar. And if my designs are coming from a professional designer, I\u2019m yet to come across one that doesn\u2019t care exactly what size a button is. Does such a creature even exist? But if you\u2019re designing a site yourself, and don\u2019t really care exactly how tall that button is, or exactly how far your paragraph text is from the heading above, and want the spacing to grow as the font-size changes, then using ems for margin/padding is the right tool for the job. Now, on to one of the more baffling \u2018reasons\u2019 for using rems and ems. (I don\u2019t know why I\u2019m numbering these headings.) #4 Make modules that you can resize simply by changing the root element font-size These words that you have so graciously been reading were spurred by a blog post that came out a few weeks back, Design a responsive site with em-based sizing. It explains (accurately) that by using a combination of rems and ems, you can create a component (say, a modal window) that can scale to different sizes just by changing a single font-size on the root element of the component. It makes sense. In the same way that \u201cif you often murder people, it is handy to carry a shovel in the boot of your car\u201d makes sense. It\u2019s great advice I\u2019m sure. But I can\u2019t remember the last time I did a murder, and I can\u2019t recall the last time I wanted a component that grew in all dimensions, paddings and font-sizes, by the same factor, by changing just one value. So here\u2019s my advice. When you\u2019re starting a project, ask yourself: will I need to create any modules that will sometimes be a certain size, and other times be exactly 10% bigger in every dimension. If the answer is yes, follow the advice in the blog post above, it is exactly what you are looking for. And carry a shovel in your boot, ya psycho. You can scale all the text on your page with one\u00a0property (I\u2019ve decided not to number the headings anymore.) Another befuddling reason to use ems goes like this: you have defined font-size in your CSS in, totally, like, 50 different places. You want all 50 to be bigger on bigger screens, and smaller on smaller screen, and that\u2019s a lot of media queries. This is apparently best solved by using rems everywhere, then changing the root font size in your media queries. Boom! All your text will change size at once. I think this advice can be safely ignored for two reasons. I shall list them for you. Here\u2019s the thing, when you have a separate file just for typography, and you have, say, 12 styles in there, and for each style you have different sizes for four screen sizes, that\u2019s 48 different font-size declarations and probably line-heights, maybe margins and letter-spacings too. As Winston Churchill once said, \u201cthat\u2019s a lot of stuff\u201d. Now, it\u2019s easy to see all this and think \u201coh no, that\u2019s a lot of repetition, we need to do this a different way\u200a\u2014\u200ano matter what the cost\u200a\u2014\u200ato avoid repetition.\u201d I disagree. A lot. Too often I see complexity introduced into apps in the name of The Almighty DRY. Don\u2019t underestimate how much complexity is introduced when you mix multiple units. NASA used two different units on their Mars orbiter, and they still can\u2019t find it. Don\u2019t let your website get lost in space. Oh and it\u2019s not just different units, but having text in some part of your app that changes size based on the font-size in some other place? That\u2019s the antithesis of encapsulation, it says pish to determinism, and is just generally asking for trouble. So\u2026 think your typography through, set it up once, do it in pixels, cope with a bit of repetition, bask in the certainly that your text will be the size you told it to be, then forget about it. That rant went on for much longer than what you just witnessed, but I wrote the rest out in a letter and didn\u2019t post it. In conclusion I think it all boils down to this: there are times when you should use rems and ems\u200a\u2014\u200athey\u2019re in the spec for a reason. But the scenarios in which you need them are fewer and farther between than the prevailing wisdom would suggest. So don\u2019t go looking for a reason to use ems and rems. It is enough to what they do. Use pixels, and if a scenario pops up where ems or rems are the better tool for the job, go for it. Bonus round; on the topic of\u00a0units The below have little to do with this article, so I shall list them with no real explanation of what they\u2019re doing here and offer no further outro. It will be unsatisfying. ", "name": "1032", "child": "1032_1\t1032_2\t1032_3\t1032_4\t1032_5\t1032_6\t1032_7\t1032_8\t1032_9\t1032_10\t1032_11\t1032_12\t1032_13\t1032_14\t1032_15\t1032_16\t1032_17\t1032_18\t1032_19\t1032_20\t1032_21\t1032_22\t1032_23\t1032_241032_1\t1032_2\t1032_3\t1032_4\t1032_5\t1032_6\t1032_7\t1032_8\t1032_9\t1032_10\t1032_11\t1032_12\t1032_13\t1032_14\t1032_15\t1032_16\t1032_17\t1032_18\t1032_19\t1032_20\t1032_21\t1032_22\t1032_23\t1032_241032_1\t1032_2\t1032_3\t1032_4\t1032_5\t1032_6\t1032_7\t1032_8\t1032_9\t1032_10\t1032_11\t1032_12\t1032_13\t1032_14\t1032_15\t1032_16\t1032_17\t1032_18\t1032_19\t1032_20\t1032_21\t1032_22\t1032_23\t1032_241032_1\t1032_2\t1032_3\t1032_4\t1032_5\t1032_6\t1032_7\t1032_8\t1032_9\t1032_10\t1032_11\t1032_12\t1032_13\t1032_14\t1032_15\t1032_16\t1032_17\t1032_18\t1032_19\t1032_20\t1032_21\t1032_22\t1032_23\t1032_241032_1\t1032_2\t1032_3\t1032_4\t1032_5\t1032_6\t1032_7\t1032_8\t1032_9\t1032_10\t1032_11\t1032_12\t1032_13\t1032_14\t1032_15\t1032_16\t1032_17\t1032_18\t1032_19\t1032_20\t1032_21\t1032_22\t1032_23\t1032_24", "timestamp": "Apr 4"}