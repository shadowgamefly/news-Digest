{"parent": "", "timestamp": "Apr 8", "title": "ReactXP\u200a\u2014\u200aFirst\u00a0Look\ud83d\udd25", "sentences": [{"e87f": "ReactXP\u200a\u2014\u200aFirst\u00a0Look\ud83d\udd25"}, {"d91b": "ReactXP is a new Library by Microsoft for building cross platform apps that run on iOS, Android, Windows, and the web."}, {"6782": "This library looks really promising, and I will quickly demo the library as well as talk about what it offers."}, {"174d": "ReactXP is built using React and React Native, and the lifecycle methods remain the same across both platforms. The main difference between React Native is that ReactXP works out of the box with not only iOS and Android, but also on the web and on WindowsOS!"}, {"dbe1": "From the docs:"}, {"51dc": "With React and React Native, your web app can share most its logic with your iOS and Android apps, but the view layer needs to be implemented separately for each platform. We have taken this a step further and developed a thin cross-platform layer we call ReactXP. If you write your app to this abstraction, you can share your view definitions, styles and animations across multiple target platforms."}, {"88c7": "ReactXP main points:"}, {"ef01": "import RX = require('reactxp')"}, {"e3d3": "import {  Styles,  Component,  Animated,  Types,  View,  Link,  Text,} from 'reactxp'"}, {"9697": "const styles = {  container: Styles.createViewStyle({    flex: 1,    justifyContent: 'center'    backgroundColor: '#f5fcff'  })}"}, {"3b02": "class App extends Component<null, null> {  private _animatedStyle: Types.AnimatedTextStyleRuleSet;"}, {"f400": "  componentDidMount() {    // do some stuff with the _animatedStyle  }"}, {"b6f0": "render() {    return(      <View style={ styles.container }>        <Animated.Text          style={this._animatedStyle}        >          Hello World        </Animated.Text>      </View>    )  }  }"}, {"17dc": "export default App"}, {"a348": "props, state, and most React specific things work the same, because it is built on top of React and React Native."}, {"280c": "Huge props to Microsoft + Open Source and all of the great people working there, they have been absolutely crushing it lately and I am excited to see where ReactXP goes from here!"}, {"27da": "If you\u2019re looking to get started with a new ReactXP project, check out this starter project I created that you can easily clone to get set up -> https://github.com/dabit3/reactxp-starter."}], "author": "Nader Dabit", "child": "1492_1\t1492_2\t1492_3\t1492_4", "name": "1492", "content": "ReactXP\u200a\u2014\u200aFirst\u00a0Look\ud83d\udd25 ReactXP is a new Library by Microsoft for building cross platform apps that run on iOS, Android, Windows, and the web. This library looks really promising, and I will quickly demo the library as well as talk about what it offers. ReactXP is built using React and React Native, and the lifecycle methods remain the same across both platforms. The main difference between React Native is that ReactXP works out of the box with not only iOS and Android, but also on the web and on WindowsOS! From the docs: With React and React Native, your web app can share most its logic with your iOS and Android apps, but the view layer needs to be implemented separately for each platform. We have taken this a step further and developed a thin cross-platform layer we call ReactXP. If you write your app to this abstraction, you can share your view definitions, styles and animations across multiple target platforms. ReactXP main points: import RX = require('reactxp') import {  Styles,  Component,  Animated,  Types,  View,  Link,  Text,} from 'reactxp' const styles = {  container: Styles.createViewStyle({    flex: 1,    justifyContent: 'center'    backgroundColor: '#f5fcff'  })} class App extends Component<null, null> {  private _animatedStyle: Types.AnimatedTextStyleRuleSet;   componentDidMount() {    // do some stuff with the _animatedStyle  } render() {    return(      <View style={ styles.container }>        <Animated.Text          style={this._animatedStyle}        >          Hello World        </Animated.Text>      </View>    )  }  } export default App props, state, and most React specific things work the same, because it is built on top of React and React Native. Huge props to Microsoft + Open Source and all of the great people working there, they have been absolutely crushing it lately and I am excited to see where ReactXP goes from here! If you\u2019re looking to get started with a new ReactXP project, check out this starter project I created that you can easily clone to get set up -> https://github.com/dabit3/reactxp-starter. "}