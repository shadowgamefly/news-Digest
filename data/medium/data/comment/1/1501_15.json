{"parent": "1501", "name": "1501_15", "timestamp": 1474452907321, "username": "Fen1kz", "content": "You might not need redux when you use counters, but for me, Redux is extremely helpful to have testable client-server business logic. In my project, card game, I\u2019m able to do this: const [serverStore, {clientStore0, User0}] = mockStores(1);clientStore0.dispatch(roomCreateRequest());const Room = serverStore.getState().get('rooms').first();expect(serverStore.getState().get('rooms'), 'serverStore.rooms').equal(Map({[Room.id]: Room}));expect(clientStore0.getState().get('room'), 'clientStore.room').equal(Room.id);expect(clientStore0.getState().get('rooms'), 'clientStore.rooms').equal(Map({[Room.id]: Room})); So for 5 lines of code i tested that client can send request to create a room, server will handle it and client will get the room back. I can\u2019t think how it could be done so pure and easy without Redux. ", "creatorid": "7963d6f936a2", "id": "db3f6d83595e", "child": "", "title": ""}