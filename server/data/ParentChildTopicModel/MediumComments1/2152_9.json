{"content": "Sure you can use a custom Layout for your PreferenceFragmentCompat. Go to your style.xml file and search for your App\u2019s Theme (The Theme which is used for the Activity where your PreferenceFragment belongs to). It should look like this at the moment: <style name=\"AppTheme\" parent=\"Theme.AppCompat\">    ...    <item name=\"preferenceTheme\">        @style/PreferenceThemeOverlay.v14.Material    </item>    ...</style> Found it?Then change it to this: <style name=\"AppTheme\" parent=\"Theme.AppCompat\">    ...    <item name=\"preferenceTheme\">        @style/AppPreferenceTheme    </item>    ...</style> and add the following two styles: <!-- Custom Preference Theme --><style name=\"AppPreferenceTheme\"        parent=\"@style/PreferenceThemeOverlay.v14.Material\">    <item name=\"preferenceFragmentCompatStyle\">        @style/AppPreferenceFragmentCompatStyle    </item></style> <!-- Custom Style for PreferenceFragmentCompat --><style name=\"AppPreferenceFragmentCompatStyle\"        parent=\"@style/PreferenceFragment.Material\">    <item name=\"android:layout\">@layout/pref_screen</item></style> In our custom AppPreferenceTheme (which inherits from the v14 Material Theme) we override the style for PreferenceFragmentCompat.In AppPreferenceFragmentCompatStyle (which inherits from the default Material one to keep the other predefined attributes) we finally change the layout for it. In your layout file (in this case pref_screen.xml) you must include a ViewGroup with the id @+id/list_container to make it work. It can look like this: <?xml version=\"1.0\" encoding=\"utf-8\"?><LinearLayout    xmlns:android=\"http://schemas.android.com/apk/res/android\"    android:orientation=\"vertical\"    android:layout_width=\"match_parent\"    android:layout_height=\"match_parent\">    <Button        android:layout_width=\"match_parent\"        android:layout_height=\"wrap_content\"        android:text=\"test\"/>        <FrameLayout        android:layout_width=\"match_parent\"        android:layout_height=\"match_parent\"        android:id=\"@+id/list_container\"/></LinearLayout> I hope this was helpful. PS: I think you can access the button in the onCreateView method of the PreferenceFragmentCompat. Happy coding \ud83d\udcbb. ", "child": "", "name": "2152_9", "parent": "2152", "title": ""}