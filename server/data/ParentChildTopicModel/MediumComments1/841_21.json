{"content": "You\u2019ve taken one small step into thee world of typed programming. That\u2019s wonderful! Now I\u2019m going to encourage you to consider for a moment\u200a\u2014\u200amaybe there\u2019s further you can go. Maybe those of us who have been, for years, advocating programming with pure, referentially transparent, strongly typed functions have been promoting something of value. Maybe explicitly typed side-effects, sum types, applicative functors and monadic composition aren\u2019t just masturbatory generalizations\u00a0, but have real and potent benefits\u00a0. Maybe, just maybe, they really do allow you to write software that works as soon as it compiles, refactors easily, and never breaks. If there\u2019s some chance that all of this might be true, wouldn\u2019t it be worth just a little bit of effort to find out? Join us. You\u2019ve taken the first step, and there\u2019s a long way to go, but the value of the gems that are even still yet to be mined from functional programming are beyond measure. Don\u2019t be afraid when you discover that you didn\u2019t actually know all that much about programming\u200a\u2014\u200athat\u2019s still true for all of us. The road is long, but when using a language and a type system that supports all of these things, the code ends up getting better every day. Take that next step. ", "child": "", "name": "841_21", "parent": "841", "title": ""}