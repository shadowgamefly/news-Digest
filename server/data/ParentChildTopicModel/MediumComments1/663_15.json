{"content": "Thank you for the article\u200a\u2014\u200athere are some great tips in here! Animation multipliers are going to save me hours of tweaking. So simple! I did have one potential problem with technique #2: \u201cUse pointer-events: none along with no opacity to hide elements\u201d The problem with this is that, as far as the browser is concerned, it\u2019s not really hidden, it\u2019s just rendered with zero-opacity. So screen readers like VoiceOver will still read the content. That\u2019s not a problem with presentation only elements, but say you hid the states of a animated menu (like in the final animation on this page) all of your states will be spoken and can be interacted with. This article has sparked an idea for some browser testing, but I think you can work around the issue in a couple of ways: On presentation elements, add role=\u201dpresentation\u201d. That should tell the browser and screen readers that the element is decoration only.On content elements, add the aria-hidden=\u201dtrue\u201d attribute to the element when hidden and remove it when visible. I actually prefer using aria-hidden to a class for simple state-display animation like: .tab-panel[aria-hidden=\"true\"]{    pointer-events:none;    opacity: 0;} Thanks again for the great techniques! ", "child": "", "name": "663_15", "parent": "663", "title": ""}