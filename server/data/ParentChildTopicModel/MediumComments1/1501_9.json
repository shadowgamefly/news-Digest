{"content": "I Always Seem to Need\u00a0Redux I\u2019m currently building a simple application and I want to try not to use Redux, even though my usage of Redux is a conscious choice and a result of previous frustrations with \u201cvanilla\u201d React. I\u2019m following Ryan Florence and Michael Jackson and their tweets convinced me to try to figure out React better before reaching for tools like Redux. While building my app I read this article, I re-read the whole React docs in case I missed something, I read a couple of other articles which claim that you often don\u2019t need Redux, I even scrolled through this Twitter search to try to collect advice from Ryan and Michael about managing state in React without Redux. However, I can\u2019t get past very obvious issues of separation of concerns. Redux lets me separate states very clearly, but in vanilla React I have to cram most of my state and functionality in the root component. As for passing props through multiple levels, there are tricks like this, but it still doesn\u2019t help when a state change has to affect completely separate components. Sure, there is context, but callbacks still may have to be passed through multiple levels. Even if we solved all of that, testing that sounds hard, with Redux it\u2019s a breeze. I would like to see an example of a mildly complex application in React, without Redux/MobX/etc. I just want to see how it can work, because I always seem to need something like Redux for connecting components to the state as needed, React simply isn\u2019t enough, for the reasons you outlined in the article. ", "child": "", "name": "1501_9", "parent": "1501", "title": ""}