{"name": "860", "parent": "", "title": "The Developer\u2019s Edge: How To Become A Senior Developer", "sentences": [{"1f96": "The Developer\u2019s Edge: How To Become A Senior Developer"}, {"7409": "Climb up that knowledge ladder. Hipster shoes not required."}, {"0dbc": "This is Part 2 of a series of articles for programmers looking to upgrade their skills. Part 1 took us through the very beginning stages where we set out to find the most efficient way to go from zero to an employable developer. Today, we are going to take things a whole lot further."}, {"2138": "This article is for all the developers, coders, programmers out there who are looking to make a jump in their career after having had a few years in the industry (or you may be just starting out but would like to see the sort of path you have to go on). This article is for those with a simple desire: You want to be considered a Senior Developer and you want to excel in your field. By the end of reading this, you will have a set path with a list of the best resources for you to level up and become a senior developer. Woaa! bold statement. Hope I got you hooked. Let\u2019s dive in."}, {"5236": "Disclaimer: As with all things in life, you can always set your own path. Although this is not meant to be the only way, it is a method that I have discovered in my own career, and through many conversations and interviews I have had in the past year with people I consider senior and respected programmers in the community. I have accumulated all of the commonalities into this post. Underneath all of this is not just an article on how to become a better developer. It is a how to guide on optimizing your time with efficient and useful tools so that you get the most out of your life. You can take this sort of learning anywhere in the future."}, {"783a": "What Do We\u00a0Want?"}, {"b235": "We all strive to be better at our jobs. What the specifics of that statement may be is up to the individual person. However, most people can agree on a few common things:"}, {"e73b": "In order to achieve the above, we can\u2019t just rest on our laurels, and expect things to come to us. Especially in the world of programming, where the technology is always changing, and the amount of information available to us is overwhelming, we want to focus our attention on growing and learning without burning out. With more and more developers coming out of colleges and bootcamps, we need to keep our skills sharp, and the way to set yourself apart is to be smart and efficient when learning. Enough talk, let\u2019s dive in. As always we will try and take the best approach."}, {"abfa": "What Is A Senior Developer?"}, {"18ca": "No, being a polyglot who can code in 10 different programming languages and has built their own version of Jarvis does not make you a senior developer (although you are very talented). This is because a senior developer is someone who brings an incremental benefit to the table. It is someone that makes people around him or her better, and is someone that is able to have a long term vision, deliver, and consistently produce business value. You can know all the cool functional programming techniques in the world, but if you are unable to communicate well with your team, or you are not able to focus on delivering actual value to a customer, you are not a senior developer. This is the important point: What value do you bring to your company/startup/business? If you are one of the few people who can bring order of magnitude (some people love the idea of 10x ) value to your company or business, you are a senior developer. Senior Developer is not just another job title, but rather, the ability to use your experiences to provide real benefit to the stakeholders."}, {"644f": "Got It. How Do I Become\u00a0One?"}, {"a45f": "This is the section all of you have been waiting for (or so I am imagining\u2026 maybe nobody reads this\u2026In which case i\u2019ll just keep talking to myself). Let\u2019s dig in and see if we can make it through everything. Follow the below resources and spend some time learning about each topic. If you are able to actively work on the below skills, you will be miles ahead of everybody else. I call this the Developer\u2019s Edge: there will always be people with more experience than you in a field, but you can work smarter, and in a more efficient manner to accumulate different combinations of skills to set you apart. This not only makes you a better developer, it also increases your overall happiness because you are providing real value to people."}, {"fb5d": "An often overlooked aspect of learning is that you need to specialize and focus solely on one thing. However, that is not how life works. It is very rare in life that you require just one skill. Especially in a field like technology where things are changing (who knows what Machine Learning engineers will be doing in 5 years?), you need to have a diverse set of transferable skills that will translate into you being adaptable."}, {"6439": "These are the 6 core skills you will need to be considered a senior developer:"}, {"b2b4": "1. Technical Skills"}, {"8a92": "This is usually the first skill that comes to mind for most people. Hopefully by this point you are convinced that it is a small slice of a much larger pie. Don\u2019t get me wrong, you do need this skill and you can\u2019t fake it. However, you can be smart about what you focus on. Senior developers spend time understanding the WHY of a technology. Why does this problem exist? Why does this framework exist? What problem is this library solving? As a developer, you need to have a good sense of all of the tools and ideas that can benefit the development lifecycle and pick the tools that will have the biggest positive gain on a project. Instead of focusing on every single new release feature of this super fancy testing framework, they focus on the pros and cons of each testing framework when trying to solve a real problem for the company. They ask questions like \u2018What can be improved in our Continuous Delivery process to provide a better product?\u201d"}, {"2f9b": "They also understand HOW things are connected. To get started on thinking like this, mind mapping is a great tool to get familiar with. It is essentially a tool you can use to really push learning to the next level (Here is a great example of mind mapping for Javascript developers). This mind map helps your brain make connections between different ideas and technologies."}, {"147d": "An example: If I was a Javascript Developer (which I am, so let\u2019s not play pretend here) this course by Cory House is a great example of the things you would need to know to connect the dots on the javascript environment. Once you have a good grasp on the tooling and technology in your industry, you need to create a mind map of what problems products face as they scale, and when premature optimization is a bad thing. By having this connection in your head of all of the above, you\u2019re able to focus the resources of your company on the things that matter most by having a broad view instead of a narrow focus."}, {"2b1c": "If you have come out of a coding bootcamp, or you don\u2019t have a computer science degree, you need to start learning about data structures, algorithms and other computer science topics. Why? Because although frameworks and technologies change, the main principles in computer science (mostly) stay the same. By understanding these higher level topics, you are once again able to see that most software problems and good practices are generally constant throughout different languages and time. This book (Rob Conery) and this book (Gayle Laakmann McDowell) are probably the best tools I have found to level up your skills in this. Although they only scratch the surface, it will set the foundation for more learning in the future."}, {"59ae": "Start listening to podcasts like Software Engineering Daily by Jeff Meyerson so you can stay current on the present issues and future outlooks of the whole industry."}, {"0b6e": "Finally, read this great article which goes through the some subset skills from a purely technical standpoint."}, {"9b95": "2. Team\u00a0Skills"}, {"ccf6": "This is an often overlooked skill. How do you work with team members? Are you brash and opinionated with PR (pull request) reviews, and contribute to a toxic culture? Or are you considerate, cooperative and encouraging of your team members? Senior developers don\u2019t have large egos. They know they are good, and don\u2019t need to prove themselves to others. They write clean simplistic code rather than code to try and show off their skills which is unreadable to the other team members. They are willing to help others, and they are willing to ask questions when they don\u2019t know something."}, {"bb74": "This is where emotional intelligence comes in. Social psychology is an important tool to improve this skill and there is nothing better than the famous How to Win Friends and Influence People. Remember: how can you make those around you better? If you have 5 people on your team, 1 + 1 + 1 + 1 + 1 should equal greater than 5 because you make those around you better (Im getting evil eyes from math purists now\u2026I shall move on)."}, {"b139": "If you are the type of person that any project you get put on, or any team that you are a part of, you are able to get along with your teammates and make others work well together, you\u2019re already miles ahead of most people. You also make managers, directors, scrum masters, and CTO\u2019s lives easier. Those are the people that get promoted, and more importantly, those are the people that provide the most value to a company."}, {"2860": "3. Client/User Skills"}, {"0d93": "Are you able to talk to a client or user and clearly see what their needs are? When they suggest something to you, do you understand what problems they are facing? A senior developer is somebody that can be left alone with a client and can be a great listener, and then offer advice on what the best steps are to move forward. They are great at forming relations. They are not a pushover, but they don\u2019t push their opinions on the client. They understand that the goal is a non zero sum game where both client and developers gain from the interaction. Have a read through this book to work on this skill."}, {"d4d7": "Finally, you need to be able to explain complex programming concepts to a non technical person. Start developing this skill by watching great instructors break down complex topics. Here is my favourite instructor, and my second favourite. Although they are teaching difficult topics, you can observe some commonalities between them that make them both great instructors."}, {"a816": "4. Growth Skills"}, {"96a2": "Senior developers are always learning something new each day. That doesn\u2019t mean they spend 14 hours a day sitting in front of a computer reading articles. They are more efficient than that. They are always looking to speak to other developers, ask questions, or explore new topics. They don\u2019t focus on just one skill set. You can be the best in the world at making one thing, but if you don\u2019t know the whole spectrum or have a general understanding of what problem you are solving, you are no longer the best."}, {"3cc0": "They have a growth mindsets (believe that intelligence is malleable) and they believe in deliberate practice (just click on the link. It is gold). They understand that learning everything is impossible and they chose to spend their time on things they enjoy and things that matter most."}, {"e2e6": "They don\u2019t just say \u201cOh I hate this library!\u201d Most of the time, people who say these sort of things hate something because they don\u2019t fully understand it. For example don\u2019t just say \u201cI hate jQuery. Only bad developers still use jQuery\u201d and sound pompous. Senior Developers say \u201cjQuery was instrumental in the development of the web and the popularity of javascript\u201d. They have opinions that can be changed because they enjoy learning from others, and they try new concepts before they decide they \u201chate\u201d something."}, {"5cd7": "5. Sales/Interview Skills"}, {"a3fb": "Senior Developers are able to get themselves in senior roles because they are able to communicate and sell themselves to people making those decisions. You are able to see the needs of your employer or business, and you can instil confidence in them that you are the person to solve it. You\u2019re confident but humble. Senior developers are also confident enough to take on those roles and be able to perform under pressure. They also know that if you never ask the answer is always no, so they ask for promotions, or roles that challenge them because they believe they are the right person for the job. Although sales and negotiation may be seen as sleezy to some, it is a valuable skill that you need to acquire. Ramit Sethi has a great article to get you started. Although it talks about salary negotiation, some of the principles can be applied to other scenarios."}, {"2b12": "6. Community Skills"}, {"4456": "Senior developers contribute to the developer community. Whether it be by doing tech talks, speaking at meet ups, contributing to open source, or even writing articles. They are the type of people that share information with the industry. Instead of being in a closed off box of just their working space, they go out and communicate with people in other communities which allows them to broaden their horizons. It\u2019s kind of like travelling: The more cultures you meet and talk to, the more you understand the similarities and differences between people, and the more you start to appreciate it."}, {"292a": "One Final\u00a0Thing"}, {"47a5": "If you are able to actively work on the above skills, you will set yourself apart immediately. However, I have left the most important topic out of this list: You enjoy what you are doing. If you don\u2019t enjoy learning everyday about computer science and software development, you will never become a senior developer because you won\u2019t have the drive to be better over the long term. If you have ever read So Good They Can\u2019t Ignore You you understand that passion has been over-hyped. The real passion comes after you have mastered a skill. You have worked hard to become proficient and a leader in a field. You have developed those skills and now the respect and the benefit you provide to others pushes you to become better and better to get more of these good feelings. That\u2019s how you develop passion for work that you do."}, {"b153": "Conclusion"}, {"dee3": "If you have learned to code and are looking for the next step in your career you need to think differently. How are you able to stand out? How are you able to grow? How are you able to help people solve real problems and provide value? You become a senior developer by not doing the easy things. You do the things that push and challenge your mind and comfort level. You learn and you adapt day by day just like you did the first time your wrote that first piece of code. Each step will be small, but in a span of a lifetime, a small step turns into miles. Never stop reading and never stop learning, but also know what\u2019s a valuable use of your time and what isn\u2019t."}, {"691b": "Call To\u00a0Action"}, {"7a67": "I will be focusing my next articles on the Developer Edge. I will be talking about technical skills such as Progressive Web Apps, React, Security, Performance, GraphQL, Serverless Architecture, as well as other higher level skills you can acquire to get an edge."}, {"89ea": "Please follow me on Medium and hit the \ud83d\udc9a button if you found this article helpful, and share it with anyone you may think will benefit from it. Also, you can always ask me questions or say hi on twitter."}, {"afdc": "Ok. I\u2019m done for now. good luck. BYE!"}], "content": "The Developer\u2019s Edge: How To Become A Senior Developer Climb up that knowledge ladder. Hipster shoes not required. This is Part 2 of a series of articles for programmers looking to upgrade their skills. Part 1 took us through the very beginning stages where we set out to find the most efficient way to go from zero to an employable developer. Today, we are going to take things a whole lot further. This article is for all the developers, coders, programmers out there who are looking to make a jump in their career after having had a few years in the industry (or you may be just starting out but would like to see the sort of path you have to go on). This article is for those with a simple desire: You want to be considered a Senior Developer and you want to excel in your field. By the end of reading this, you will have a set path with a list of the best resources for you to level up and become a senior developer. Woaa! bold statement. Hope I got you hooked. Let\u2019s dive in. Disclaimer: As with all things in life, you can always set your own path. Although this is not meant to be the only way, it is a method that I have discovered in my own career, and through many conversations and interviews I have had in the past year with people I consider senior and respected programmers in the community. I have accumulated all of the commonalities into this post. Underneath all of this is not just an article on how to become a better developer. It is a how to guide on optimizing your time with efficient and useful tools so that you get the most out of your life. You can take this sort of learning anywhere in the future. What Do We\u00a0Want? We all strive to be better at our jobs. What the specifics of that statement may be is up to the individual person. However, most people can agree on a few common things: In order to achieve the above, we can\u2019t just rest on our laurels, and expect things to come to us. Especially in the world of programming, where the technology is always changing, and the amount of information available to us is overwhelming, we want to focus our attention on growing and learning without burning out. With more and more developers coming out of colleges and bootcamps, we need to keep our skills sharp, and the way to set yourself apart is to be smart and efficient when learning. Enough talk, let\u2019s dive in. As always we will try and take the best approach. What Is A Senior Developer? No, being a polyglot who can code in 10 different programming languages and has built their own version of Jarvis does not make you a senior developer (although you are very talented). This is because a senior developer is someone who brings an incremental benefit to the table. It is someone that makes people around him or her better, and is someone that is able to have a long term vision, deliver, and consistently produce business value. You can know all the cool functional programming techniques in the world, but if you are unable to communicate well with your team, or you are not able to focus on delivering actual value to a customer, you are not a senior developer. This is the important point: What value do you bring to your company/startup/business? If you are one of the few people who can bring order of magnitude (some people love the idea of 10x ) value to your company or business, you are a senior developer. Senior Developer is not just another job title, but rather, the ability to use your experiences to provide real benefit to the stakeholders. Got It. How Do I Become\u00a0One? This is the section all of you have been waiting for (or so I am imagining\u2026 maybe nobody reads this\u2026In which case i\u2019ll just keep talking to myself). Let\u2019s dig in and see if we can make it through everything. Follow the below resources and spend some time learning about each topic. If you are able to actively work on the below skills, you will be miles ahead of everybody else. I call this the Developer\u2019s Edge: there will always be people with more experience than you in a field, but you can work smarter, and in a more efficient manner to accumulate different combinations of skills to set you apart. This not only makes you a better developer, it also increases your overall happiness because you are providing real value to people. An often overlooked aspect of learning is that you need to specialize and focus solely on one thing. However, that is not how life works. It is very rare in life that you require just one skill. Especially in a field like technology where things are changing (who knows what Machine Learning engineers will be doing in 5 years?), you need to have a diverse set of transferable skills that will translate into you being adaptable. These are the 6 core skills you will need to be considered a senior developer: 1. Technical Skills This is usually the first skill that comes to mind for most people. Hopefully by this point you are convinced that it is a small slice of a much larger pie. Don\u2019t get me wrong, you do need this skill and you can\u2019t fake it. However, you can be smart about what you focus on. Senior developers spend time understanding the WHY of a technology. Why does this problem exist? Why does this framework exist? What problem is this library solving? As a developer, you need to have a good sense of all of the tools and ideas that can benefit the development lifecycle and pick the tools that will have the biggest positive gain on a project. Instead of focusing on every single new release feature of this super fancy testing framework, they focus on the pros and cons of each testing framework when trying to solve a real problem for the company. They ask questions like \u2018What can be improved in our Continuous Delivery process to provide a better product?\u201d They also understand HOW things are connected. To get started on thinking like this, mind mapping is a great tool to get familiar with. It is essentially a tool you can use to really push learning to the next level (Here is a great example of mind mapping for Javascript developers). This mind map helps your brain make connections between different ideas and technologies. An example: If I was a Javascript Developer (which I am, so let\u2019s not play pretend here) this course by Cory House is a great example of the things you would need to know to connect the dots on the javascript environment. Once you have a good grasp on the tooling and technology in your industry, you need to create a mind map of what problems products face as they scale, and when premature optimization is a bad thing. By having this connection in your head of all of the above, you\u2019re able to focus the resources of your company on the things that matter most by having a broad view instead of a narrow focus. If you have come out of a coding bootcamp, or you don\u2019t have a computer science degree, you need to start learning about data structures, algorithms and other computer science topics. Why? Because although frameworks and technologies change, the main principles in computer science (mostly) stay the same. By understanding these higher level topics, you are once again able to see that most software problems and good practices are generally constant throughout different languages and time. This book (Rob Conery) and this book (Gayle Laakmann McDowell) are probably the best tools I have found to level up your skills in this. Although they only scratch the surface, it will set the foundation for more learning in the future. Start listening to podcasts like Software Engineering Daily by Jeff Meyerson so you can stay current on the present issues and future outlooks of the whole industry. Finally, read this great article which goes through the some subset skills from a purely technical standpoint. 2. Team\u00a0Skills This is an often overlooked skill. How do you work with team members? Are you brash and opinionated with PR (pull request) reviews, and contribute to a toxic culture? Or are you considerate, cooperative and encouraging of your team members? Senior developers don\u2019t have large egos. They know they are good, and don\u2019t need to prove themselves to others. They write clean simplistic code rather than code to try and show off their skills which is unreadable to the other team members. They are willing to help others, and they are willing to ask questions when they don\u2019t know something. This is where emotional intelligence comes in. Social psychology is an important tool to improve this skill and there is nothing better than the famous How to Win Friends and Influence People. Remember: how can you make those around you better? If you have 5 people on your team, 1 + 1 + 1 + 1 + 1 should equal greater than 5 because you make those around you better (Im getting evil eyes from math purists now\u2026I shall move on). If you are the type of person that any project you get put on, or any team that you are a part of, you are able to get along with your teammates and make others work well together, you\u2019re already miles ahead of most people. You also make managers, directors, scrum masters, and CTO\u2019s lives easier. Those are the people that get promoted, and more importantly, those are the people that provide the most value to a company. 3. Client/User Skills Are you able to talk to a client or user and clearly see what their needs are? When they suggest something to you, do you understand what problems they are facing? A senior developer is somebody that can be left alone with a client and can be a great listener, and then offer advice on what the best steps are to move forward. They are great at forming relations. They are not a pushover, but they don\u2019t push their opinions on the client. They understand that the goal is a non zero sum game where both client and developers gain from the interaction. Have a read through this book to work on this skill. Finally, you need to be able to explain complex programming concepts to a non technical person. Start developing this skill by watching great instructors break down complex topics. Here is my favourite instructor, and my second favourite. Although they are teaching difficult topics, you can observe some commonalities between them that make them both great instructors. 4. Growth Skills Senior developers are always learning something new each day. That doesn\u2019t mean they spend 14 hours a day sitting in front of a computer reading articles. They are more efficient than that. They are always looking to speak to other developers, ask questions, or explore new topics. They don\u2019t focus on just one skill set. You can be the best in the world at making one thing, but if you don\u2019t know the whole spectrum or have a general understanding of what problem you are solving, you are no longer the best. They have a growth mindsets (believe that intelligence is malleable) and they believe in deliberate practice (just click on the link. It is gold). They understand that learning everything is impossible and they chose to spend their time on things they enjoy and things that matter most. They don\u2019t just say \u201cOh I hate this library!\u201d Most of the time, people who say these sort of things hate something because they don\u2019t fully understand it. For example don\u2019t just say \u201cI hate jQuery. Only bad developers still use jQuery\u201d and sound pompous. Senior Developers say \u201cjQuery was instrumental in the development of the web and the popularity of javascript\u201d. They have opinions that can be changed because they enjoy learning from others, and they try new concepts before they decide they \u201chate\u201d something. 5. Sales/Interview Skills Senior Developers are able to get themselves in senior roles because they are able to communicate and sell themselves to people making those decisions. You are able to see the needs of your employer or business, and you can instil confidence in them that you are the person to solve it. You\u2019re confident but humble. Senior developers are also confident enough to take on those roles and be able to perform under pressure. They also know that if you never ask the answer is always no, so they ask for promotions, or roles that challenge them because they believe they are the right person for the job. Although sales and negotiation may be seen as sleezy to some, it is a valuable skill that you need to acquire. Ramit Sethi has a great article to get you started. Although it talks about salary negotiation, some of the principles can be applied to other scenarios. 6. Community Skills Senior developers contribute to the developer community. Whether it be by doing tech talks, speaking at meet ups, contributing to open source, or even writing articles. They are the type of people that share information with the industry. Instead of being in a closed off box of just their working space, they go out and communicate with people in other communities which allows them to broaden their horizons. It\u2019s kind of like travelling: The more cultures you meet and talk to, the more you understand the similarities and differences between people, and the more you start to appreciate it. One Final\u00a0Thing If you are able to actively work on the above skills, you will set yourself apart immediately. However, I have left the most important topic out of this list: You enjoy what you are doing. If you don\u2019t enjoy learning everyday about computer science and software development, you will never become a senior developer because you won\u2019t have the drive to be better over the long term. If you have ever read So Good They Can\u2019t Ignore You you understand that passion has been over-hyped. The real passion comes after you have mastered a skill. You have worked hard to become proficient and a leader in a field. You have developed those skills and now the respect and the benefit you provide to others pushes you to become better and better to get more of these good feelings. That\u2019s how you develop passion for work that you do. Conclusion If you have learned to code and are looking for the next step in your career you need to think differently. How are you able to stand out? How are you able to grow? How are you able to help people solve real problems and provide value? You become a senior developer by not doing the easy things. You do the things that push and challenge your mind and comfort level. You learn and you adapt day by day just like you did the first time your wrote that first piece of code. Each step will be small, but in a span of a lifetime, a small step turns into miles. Never stop reading and never stop learning, but also know what\u2019s a valuable use of your time and what isn\u2019t. Call To\u00a0Action I will be focusing my next articles on the Developer Edge. I will be talking about technical skills such as Progressive Web Apps, React, Security, Performance, GraphQL, Serverless Architecture, as well as other higher level skills you can acquire to get an edge. Please follow me on Medium and hit the \ud83d\udc9a button if you found this article helpful, and share it with anyone you may think will benefit from it. Also, you can always ask me questions or say hi on twitter. Ok. I\u2019m done for now. good luck. BYE! ", "child": "860_1\t860_2\t860_3\t860_4\t860_5\t860_6\t860_7\t860_8\t860_9\t860_10\t860_11\t860_12\t860_13\t860_14\t860_15\t860_16\t860_17\t860_18\t860_19\t860_20\t860_21\t860_22\t860_23\t860_24\t860_25"}