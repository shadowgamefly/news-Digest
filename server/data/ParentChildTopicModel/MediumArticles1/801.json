{"name": "801", "parent": "", "title": "You Are Not The Code You Write\u00a0\ud83d\udd0a", "sentences": [{"3674": "You Are Not The Code You Write\u00a0\ud83d\udd0a"}, {"8cc4": "Criticism to your code is not criticism to\u00a0you"}, {"38b0": "Listen to the audio version!"}, {"8d58": "There are some places where the police advise you to not treat your vehicle as a person. Let\u2019s say you\u2019re in a dangerous situation and you need to jump from the vehicle while on high speed. If you treat it as your \"baby\", then your instinct is gonna be to stay and save it. However, if you let it go, the chances of surviving can be bigger."}, {"769b": "A vehicle is just a machine."}, {"ad22": "As Humans, we tend to attach feelings to objects because we care. However, they don\u2019t care about\u00a0us."}, {"984e": "The same attachment can happen to the code."}, {"9842": "We say a developer is married with the code when they don't feel comfortable when somebody wants to change something they wrote."}, {"1f3a": "The reason why they do that can vary. However, there are some common patterns:"}, {"d40d": "There are people who can overcome those effects by having a different mindset. They understand that you are not the code you write."}, {"f0b1": "Criticism to your code is not a criticism to you. Just because you wrote a crap code in the past, for whatever reason, that doesn\u2019t mean you\u2019re a crap developer. The code is crap, not you. You never were."}, {"4ed4": "There\u2019s an interesting principle people use when doing retrospectives called \u201cThe Retrospective Prime Directive\u201d, which says:"}, {"6541": "Regardless of what we discover, we understand and truly believe that everyone did the best job they could, given what they knew at the time, their skills and abilities, the resources available, and the situation at hand."}, {"fab7": "With code is the same."}, {"5688": "There\u2019s always something to improve and we should believe everyone did their best at the time given the circumstances."}, {"12cb": "The code is just like a car or motorcycle. It\u2019s a lifeless tool and you shouldn\u2019t be attaching feelings to\u00a0it."}, {"ef96": "If you treat the code as your \"baby\" or as a representation of yourself, then:"}, {"808f": "The author of the most loved and most hated library in the history of JavaScript said in a blog post a long time ago:"}, {"c825": "I have learned that in the open-source world, you are not your code. A critique of your project is not tantamount to a personal attack. An alternative take on the problem your software solves is not hostile or divisive. It is simply the result of a regenerative process, driven by an unending desire to improve the status quo."}, {"6334": "The project scope changes, time passes by, people improve, individuals come and go and the code stays the same. Stop caring about the ship that already sailed and start caring about the new ships you\u2019re gonna build."}, {"aeb2": "Be comfortable that people will look one year from now at the code you will write today and criticize it. Those \"people\" can be even yourself, for that the goal is not to insult, but to learn with the past in order to understand the present and create a better future."}, {"3a03": "Be comfortable to criticize code if it has already been done or if still\u00a0hasn\u2019t"}, {"ef06": "That doesn't mean you shouldn't be proud of your work. It means you shouldn't be too sentimental and defensive about it."}, {"4dd1": "Accept that you can be wrong."}, {"0eb4": "The only day you\u2019ll be the code you write is when you become a cyborg able to program yourself."}, {"2751": "Kill your ego and don\u2019t be afraid to let it go."}, {"f21c": "Trust me. It's worth it."}, {"9bfb": "Thanks for reading. If you have some feedback, reach out to me on Twitter, Facebook or Github."}], "content": "You Are Not The Code You Write\u00a0\ud83d\udd0a Criticism to your code is not criticism to\u00a0you Listen to the audio version! There are some places where the police advise you to not treat your vehicle as a person. Let\u2019s say you\u2019re in a dangerous situation and you need to jump from the vehicle while on high speed. If you treat it as your \"baby\", then your instinct is gonna be to stay and save it. However, if you let it go, the chances of surviving can be bigger. A vehicle is just a machine. As Humans, we tend to attach feelings to objects because we care. However, they don\u2019t care about\u00a0us. The same attachment can happen to the code. We say a developer is married with the code when they don't feel comfortable when somebody wants to change something they wrote. The reason why they do that can vary. However, there are some common patterns: There are people who can overcome those effects by having a different mindset. They understand that you are not the code you write. Criticism to your code is not a criticism to you. Just because you wrote a crap code in the past, for whatever reason, that doesn\u2019t mean you\u2019re a crap developer. The code is crap, not you. You never were. There\u2019s an interesting principle people use when doing retrospectives called \u201cThe Retrospective Prime Directive\u201d, which says: Regardless of what we discover, we understand and truly believe that everyone did the best job they could, given what they knew at the time, their skills and abilities, the resources available, and the situation at hand. With code is the same. There\u2019s always something to improve and we should believe everyone did their best at the time given the circumstances. The code is just like a car or motorcycle. It\u2019s a lifeless tool and you shouldn\u2019t be attaching feelings to\u00a0it. If you treat the code as your \"baby\" or as a representation of yourself, then: The author of the most loved and most hated library in the history of JavaScript said in a blog post a long time ago: I have learned that in the open-source world, you are not your code. A critique of your project is not tantamount to a personal attack. An alternative take on the problem your software solves is not hostile or divisive. It is simply the result of a regenerative process, driven by an unending desire to improve the status quo. The project scope changes, time passes by, people improve, individuals come and go and the code stays the same. Stop caring about the ship that already sailed and start caring about the new ships you\u2019re gonna build. Be comfortable that people will look one year from now at the code you will write today and criticize it. Those \"people\" can be even yourself, for that the goal is not to insult, but to learn with the past in order to understand the present and create a better future. Be comfortable to criticize code if it has already been done or if still\u00a0hasn\u2019t That doesn't mean you shouldn't be proud of your work. It means you shouldn't be too sentimental and defensive about it. Accept that you can be wrong. The only day you\u2019ll be the code you write is when you become a cyborg able to program yourself. Kill your ego and don\u2019t be afraid to let it go. Trust me. It's worth it. Thanks for reading. If you have some feedback, reach out to me on Twitter, Facebook or Github. ", "child": "801_1\t801_2801_1\t801_2801_1\t801_2"}