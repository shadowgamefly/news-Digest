{"name": "2145", "parent": "", "title": "2 lines in Manifest to remove before sharing your Android\u00a0Library", "sentences": [{"2a47": "2 lines in Manifest to remove before sharing your Android\u00a0Library"}, {"e9ba": "It\u2019s fun to make Android library for others. Some tutorials you could refers to. Just made a simple one. Then try it on some existing applications, and learn about this."}, {"adb7": "What Android Studio auto generates for\u00a0you"}, {"e1ab": "When you create a module of new Android Library, it will generate AndroidManifest.xml which contains"}, {"2116": "<application    android:allowBackup=\"true\"    android:label=\"@string/app_name\"    android:supportsRtl=\"true\">"}, {"d58a": "In most circumstances it is fine that your library has the above. This is because given most applications have allowBackup and supportsRtl as true since it\u2019s the default. Hence these applications could include your library without any hiccup."}, {"2be3": "When the Application Manifest\u00a0differs"}, {"0936": "Unfortunately some application has a different setting for either allowBackup or supportsRtl or even both. And when that happens, they will have the error similar to below when they include your library."}, {"da96": "Manifest merger failed : Attribute application@supportsRtl value=(false) from AndroidManifest.xml:23:9-36is also present at [com.mylibrarypackage:mylibrary:1.0.0] AndroidManifest.xml:14:9-35 value=(true).Suggestion: add 'tools:replace=\"android:supportsRtl\"' to <application> element at AndroidManifest.xml:18:5-67:19 to override."}, {"7fd1": "Isn\u2019t there a workaround on the application side?"}, {"479a": "Yes, the workaround is just simply add below into the application\u2019s AndroidManifest.xml application section"}, {"2198": "tools:replace=\"android:supportsRtl\""}, {"2f9d": "or below (when both differs)"}, {"8e68": "tools:replace=\"android:supportsRtl,android:allowBackup\""}, {"2fe2": "This command the Manifest Merger to consider the application setting instead of the library. It should be good, but there\u2019s a better way below."}, {"fc21": "There\u2019s a minor unfortunate situation though, as tools:replace seems doesn\u2019t work with tools:ignore as posted here."}, {"7969": "A better way\u2026 handle from the\u00a0library"}, {"62ab": "Why don\u2019t we handle this in the library instead? This ensures regardless of what values in their settings (i.e. allowBackup and supportsRtl) the application has, it will not impact them at all."}, {"e349": "It\u2019s as simple as remove the below two lines from the library AndroidManifest.xml."}, {"8874": "android:allowBackup=\u201ctrue\u201dandroid:supportsRtl=\u201ctrue\u201d"}, {"aea5": "Hence you only need this line there in the library application section of AndroidManifest.xml. This would save your user some trouble using your library."}, {"9cca": "<application android:label=\"@string/app_name\"/>"}, {"949f": "I\u2019m not sure why Android Studio by default have that two lines there for the Android Library Module (happens on Android Studio 2.2 too)."}, {"49c3": "I think it shouldn\u2019t be auto generated when the Library module is created, but preserve its auto generation when making an application module. This would then let the application (that uses the library) defined these two settings instead and not the library. Let me know if you think otherwise."}, {"607d": "Elye Project (@elye_project) | TwitterThe latest Tweets from Elye Project (@elye_project): \"Introduction to Coordinator Layout on Android https://t.co\u2026twitter.com"}], "content": "2 lines in Manifest to remove before sharing your Android\u00a0Library It\u2019s fun to make Android library for others. Some tutorials you could refers to. Just made a simple one. Then try it on some existing applications, and learn about this. What Android Studio auto generates for\u00a0you When you create a module of new Android Library, it will generate AndroidManifest.xml which contains <application    android:allowBackup=\"true\"    android:label=\"@string/app_name\"    android:supportsRtl=\"true\"> In most circumstances it is fine that your library has the above. This is because given most applications have allowBackup and supportsRtl as true since it\u2019s the default. Hence these applications could include your library without any hiccup. When the Application Manifest\u00a0differs Unfortunately some application has a different setting for either allowBackup or supportsRtl or even both. And when that happens, they will have the error similar to below when they include your library. Manifest merger failed : Attribute application@supportsRtl value=(false) from AndroidManifest.xml:23:9-36is also present at [com.mylibrarypackage:mylibrary:1.0.0] AndroidManifest.xml:14:9-35 value=(true).Suggestion: add 'tools:replace=\"android:supportsRtl\"' to <application> element at AndroidManifest.xml:18:5-67:19 to override. Isn\u2019t there a workaround on the application side? Yes, the workaround is just simply add below into the application\u2019s AndroidManifest.xml application section tools:replace=\"android:supportsRtl\" or below (when both differs) tools:replace=\"android:supportsRtl,android:allowBackup\" This command the Manifest Merger to consider the application setting instead of the library. It should be good, but there\u2019s a better way below. There\u2019s a minor unfortunate situation though, as tools:replace seems doesn\u2019t work with tools:ignore as posted here. A better way\u2026 handle from the\u00a0library Why don\u2019t we handle this in the library instead? This ensures regardless of what values in their settings (i.e. allowBackup and supportsRtl) the application has, it will not impact them at all. It\u2019s as simple as remove the below two lines from the library AndroidManifest.xml. android:allowBackup=\u201ctrue\u201dandroid:supportsRtl=\u201ctrue\u201d Hence you only need this line there in the library application section of AndroidManifest.xml. This would save your user some trouble using your library. <application android:label=\"@string/app_name\"/> I\u2019m not sure why Android Studio by default have that two lines there for the Android Library Module (happens on Android Studio 2.2 too). I think it shouldn\u2019t be auto generated when the Library module is created, but preserve its auto generation when making an application module. This would then let the application (that uses the library) defined these two settings instead and not the library. Let me know if you think otherwise. Elye Project (@elye_project) | TwitterThe latest Tweets from Elye Project (@elye_project): \"Introduction to Coordinator Layout on Android https://t.co\u2026twitter.com ", "child": "2145_1\t2145_2\t2145_32145_1\t2145_2\t2145_3"}